<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Laplace&#39;s Lab</title>
  
  <subtitle>“ Meet success like a gentleman and disaster like a man.”</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://laplacetw.github.io/"/>
  <updated>2019-09-01T14:03:53.452Z</updated>
  <id>https://laplacetw.github.io/</id>
  
  <author>
    <name>LaplaceTW</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>南科自造基地研習Part 2</title>
    <link href="https://laplacetw.github.io/maker-space-workshop-part-2/"/>
    <id>https://laplacetw.github.io/maker-space-workshop-part-2/</id>
    <published>2019-08-26T16:44:42.000Z</published>
    <updated>2019-09-01T14:03:53.452Z</updated>
    
    <content type="html"><![CDATA[<p>人工智慧―自然語言處理與聊天機器人開發。<br><a id="more"></a><br>Part 2於8/26 ~ 8/27在成大系統系館進行，講師為A.P. Wen-Hsiang Lu。</p><h3 id="研習內容大綱"><a href="#研習內容大綱" class="headerlink" title="研習內容大綱"></a>研習內容大綱</h3><p><br></p><ul><li>自然語言處理(NLP)技術和應用簡介</li><li>自然語言處理工具練習</li><li>命名實體識別(NER)語意分析練習</li><li>聊天機器人(ChatBot)實作練習</li></ul><hr><h3 id="筆記"><a href="#筆記" class="headerlink" title="筆記"></a>筆記</h3><p><br></p><ul><li>NLP的最終目標—自動化的語言理解/處理/分析/推理</li><li>NLP的重要性—使人機互動能做到真正的「溝通」</li><li>語言句法結構<ul><li>例1：日文為SOV結構(動詞在句尾)</li><li>例2：原民語為VSO結構(動詞在句首)</li></ul></li><li>語言學相關知識類型<ul><li>聲學知識(音譯)</li><li>詞彙學知識(字根)</li><li>詞性知識</li><li>文法知識</li><li>語意學知識</li><li>實用知識：情境如何影響句子的解釋</li><li>世界知識：我的理解是common sense，例如「I read an article about ＯＯＯ in the paper.」，我們會「直覺」地認為句子中的paper指的是「論文」。</li></ul></li><li>NLP相關技術<ul><li>概率與資訊理論</li><li>語言學知識</li><li>字彙/詞庫/語料庫/片語/詞義辨識</li><li>Ｎ-gram語言建模／隱性馬可夫模型</li><li>詞性標記</li><li>文法解析</li><li>深度學習</li><li>計算語言學<ul><li>語言描述：普遍性與跨語言研究</li><li>計算模型的實現<ul><li>演算法與資料結構</li><li>知識表徵模型</li><li>推理過程模型</li></ul></li></ul></li><li>心理語言學<ul><li>人類為語言理解可計算性的存在證明</li><li>心理學研究可以被用來解釋計算模型</li></ul></li></ul></li><li>NLP技術問題<ul><li>龐大的字彙量/無數的現象與規則</li><li>不規則變化(例外、例外中的例外…)</li><li>字彙/情境/文法中的歧義</li><li>網路時代的多語言問題<ul><li>語言障礙(人類語言據估算約有5000到7000種)</li><li>資訊過載</li></ul></li></ul></li><li>NLP相關應用<ul><li>機器翻譯</li><li>自動語音識別</li><li>(跨語言)資訊檢索</li><li>(跨語言)問題回答</li><li>文本摘要</li><li>資訊抽取</li><li>對話系統/聊天機器人</li></ul></li><li>NLP基本機率模型<ul><li>N-gram Language Model</li><li>Hidden Markov Model(HMM)</li></ul></li><li>NLP深度學習模型<ul><li>模型發展：訓練結果的詞向量由非上下文相關 –&gt; 上下文相關(詞彙於不同句子中有各自的向量表示)</li><li>Word2Vec<ul><li>CBOW(Continuous Bag of Words)：利用周圍的詞預測中心的詞</li><li>Skip-gram：利用中心的詞預測周圍的詞，訓練時間久、結果較CBOW準確</li></ul></li><li>RNN(Recurrent Neural Network)</li><li>LSTM(Long Short-Term Memory)</li><li>Seq2Seq(Sequence to Seqence)</li><li>Seq2Seq with Attention</li></ul></li><li>命名實體識別(NER)<ul><li>擷取文字資料中的人名、地名、組織名等目標實體進行分析、標記</li><li>模型構建<ul><li>Rule-based:<ul><li>Pos Tagging Pattern + statistic</li><li>Dictionary-based</li></ul></li><li>Traditional ML-based:<ul><li>Hidden Markov Model(HMM)</li><li>CRF(Conditional Random Field) + template</li></ul></li><li>DL-based:<ul><li>LSTM(Long Short-Term Memory)</li><li>LSTM with Attention</li></ul></li></ul></li><li>Viterbi Algorithm(維特比演算法)<ul><li>動態規劃演算法</li><li>在語音辨識中，聲音訊號做為觀察到的事件序列，而文字字串被視為隱含產生聲音訊號的原因，因此可對聲音訊號應用維特比演算法尋找出最有可能的文字字串。</li></ul></li><li>CRF++：條件隨機域詞性標記工具</li></ul></li><li>線上工具<ul><li><a href="http://ehownet.iis.sinica.edu.tw/index.php" target="_blank" rel="noopener">中研院E-HowNet繁體知網系統</a></li><li><a href="http://ckipsvr.iis.sinica.edu.tw" target="_blank" rel="noopener">中研院CKIP中文斷詞系統</a></li><li><a href="http://parser.iis.sinica.edu.tw" target="_blank" rel="noopener">中研院CKIP中文剖析器線上測試版</a></li><li><a href="http://nlp.stanford.edu:8080/parser/" target="_blank" rel="noopener">Stanford Parser</a></li></ul></li></ul><h3 id="實作練習"><a href="#實作練習" class="headerlink" title="實作練習"></a>實作練習</h3><p></p><h4 id="中文斷詞工具"><a href="#中文斷詞工具" class="headerlink" title="中文斷詞工具"></a>中文斷詞工具</h4><p>此工具使用了教育部國語辭典(16萬詞)來協助斷詞比對，練習用Python實作一個中文斷詞工具，大致上的概念為「先斷句，再斷詞」。</p><p>程式範例：先用正則式比對各種標點符號進行斷句後，再逐句來處理斷詞。斷詞的部分，則是由左至右循序比對、抽取出句子中最長的詞，然後再比對剩下的句子…透過重複前述步驟來拆解句子。<br><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!usr/bin/env python3</span></span><br><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line">book = &#123;&#125;</span><br><span class="line">result = <span class="string">""</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">segment</span><span class="params">(sentences)</span>:</span></span><br><span class="line">    lines = re.split(<span class="string">r'[，。；：！？／（）「」『』【】]'</span>, sentences)</span><br><span class="line">    end = len(lines) - <span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> lines[end] == <span class="string">''</span>:</span><br><span class="line">        <span class="keyword">del</span> lines[end]</span><br><span class="line">    <span class="keyword">return</span> lines</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">compare</span><span class="params">(txt)</span>:</span></span><br><span class="line">    end = len(txt)</span><br><span class="line">    res = <span class="string">""</span></span><br><span class="line">    <span class="keyword">while</span> end != <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">if</span> txt[<span class="number">0</span>:end] <span class="keyword">in</span> book:</span><br><span class="line">            res = txt[<span class="number">0</span>:end]</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        end -= <span class="number">1</span></span><br><span class="line">    res = res <span class="keyword">if</span> res != <span class="string">""</span> <span class="keyword">else</span> txt</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">breakSen</span><span class="params">(txt)</span>:</span></span><br><span class="line">    <span class="keyword">global</span> result</span><br><span class="line">    str_len = len(txt)</span><br><span class="line">    start = <span class="number">0</span></span><br><span class="line">    end = str_len + <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> start &lt; str_len:</span><br><span class="line">        _slice = txt[start:end]</span><br><span class="line">        word = compare(_slice)</span><br><span class="line">        result += word</span><br><span class="line">        start += len(word)</span><br><span class="line">        <span class="keyword">if</span> start != str_len:</span><br><span class="line">            result += <span class="string">"/"</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'words.txt'</span>, <span class="string">'r'</span>, encoding=<span class="string">'utf-8'</span>) <span class="keyword">as</span> file:</span><br><span class="line">    lines = file.read().splitlines()</span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> lines:</span><br><span class="line">        book[line] = line</span><br><span class="line">txt = <span class="string">"長頸鹿屬是一屬生長在非洲的反芻偶蹄動物，共有四個物種，是現存世界上最高的陸生動物。一般雄性個體高達4.8到5.5公尺高，重達900公斤。雌性個體一般要小一些。"</span></span><br><span class="line">print(<span class="string">"\ntxt : \n\n"</span>, txt, <span class="string">"\n"</span>)</span><br><span class="line">sentences = segment(txt)</span><br><span class="line">print(<span class="string">"segment : \n\n"</span>, sentences, <span class="string">"\n"</span>)</span><br><span class="line"><span class="keyword">for</span> s <span class="keyword">in</span> sentences:</span><br><span class="line">    breakSen(s)</span><br><span class="line">    <span class="keyword">if</span> s != sentences[len(sentences) - <span class="number">1</span>]:</span><br><span class="line">        result += <span class="string">"/"</span></span><br><span class="line">print(<span class="string">"result : \n\n"</span> + result, <span class="string">"\n"</span>)</span><br></pre></td></tr></table></figure></p><p><img src="https://i.imgur.com/1DFMiqJ.png" alt></p><h4 id="聊天機器人"><a href="#聊天機器人" class="headerlink" title="聊天機器人"></a>聊天機器人</h4><p>使用Google Dialogflow負責NLP，並與Line Channel串接為可自動回應的Chatbot。網路上<a href="https://www.appcoda.com.tw/chatbot-dialogflow-ios/" target="_blank" rel="noopener">基礎教學</a>很多，因此設定過程省略，基本上就是建立一個Agent來負責處理回應的接收和傳送，在Agent底下可以建立Intents以及Entities來設定對話流程、關鍵字。</p><p><img src="https://i.imgur.com/NNhEuJO.png" alt><br><img src="https://i.imgur.com/WWiDs8E.png" alt><br><img src="https://i.imgur.com/Aqqcwxy.png" alt></p><hr><h3 id="心得"><a href="#心得" class="headerlink" title="心得"></a>心得</h3><p><br><br>透過盧老師的詳細講解，讓大家了解到自然語言處理(NLP)所涉及包含社會科學等各方面的技術知識，以及在NLP領域還有許多難題尚待解決，如果少了NLP相關技術的話，未來的人機互動將會缺少相當重要的一塊，而人類的語言是如此多元、複雜，絕非單純把數據無腦地丟進深度學習模型就能解決(自從Google DeepMind讓阿發狗秀了一波騷操作後，人們聽到AI深度學習什麼的就像聽到傳說中的<del>EX咖哩棒</del>Excalibur呀😂)。</p><p>經過Part 2的研習，對於NLP中所謂的「斷詞」總算是有較完整的概念了，雖然自己在工作上有寫過Line與Web聊天機器人，但我自己明白那有多粗糙，就只是抓取關鍵字做出相對的回應罷了，一點兒都不智慧😕雖然使用者還是會很認真和機器人對話，但看在龜毛的人眼裡是很介意的<del>，我絕對不會承認我很介意</del>。我想我接下來可以嘗試使用NLP來做點什麼，並從經驗中更進一步理解關於NLP的知識。</p><p>感謝A.P. Wen-Hsiang Lu與助教們的用心講解，受益良多。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;人工智慧―自然語言處理與聊天機器人開發。&lt;br&gt;
    
    </summary>
    
      <category term="Workshop" scheme="https://laplacetw.github.io/categories/Workshop/"/>
    
    
      <category term="NLP" scheme="https://laplacetw.github.io/tags/NLP/"/>
    
      <category term="semantic analysis" scheme="https://laplacetw.github.io/tags/semantic-analysis/"/>
    
      <category term="chatbot" scheme="https://laplacetw.github.io/tags/chatbot/"/>
    
  </entry>
  
  <entry>
    <title>閱讀筆記:兒童急性壞死性腦病(ANEC)</title>
    <link href="https://laplacetw.github.io/acute-necrotizing-encephalopathy-of-childhood/"/>
    <id>https://laplacetw.github.io/acute-necrotizing-encephalopathy-of-childhood/</id>
    <published>2019-08-23T17:05:33.000Z</published>
    <updated>2019-08-23T17:15:43.629Z</updated>
    
    <content type="html"><![CDATA[<p>前幾天於PTT看到某篇<a href="https://www.ptt.cc/bbs/BabyMother/M.1566400996.A.FC7.html" target="_blank" rel="noopener">媽寶版的文章</a>，才知道如此令人心碎的疾病。<a id="more"></a>作者的孩子(1Y10M)其病況始於突然反覆發燒，於短短幾天內病情便急轉直下、陷入昏迷，神經科醫師診斷可能有腦部損傷，疑似兒童急性壞死性腦病(ANEC)，經緊急安排腦部核磁共振檢查，結果發現視丘及腦幹受損相當嚴重！去年遇到相同狀況的<a href="https://www.parenting.com.tw/article/5079996" target="_blank" rel="noopener">賴教授與其夫人</a>得知此事，便和作者聯繫並給予鼓勵，我也和大家在批踢踢留言給作者鼓勵打氣，無論如何都希望奇蹟能出現。</p><p>這樣的事令我感到相當震驚與難過，無知的我以為都2019年了，除了那些罕見遺傳性疾病，我們對於大多數的已知疾病應該都有所掌握才對…我這想法真可笑。出於好奇，我在網路上搜尋了關於ANEC的資訊，想知道關於其預防及治療的進展。</p><hr><h3 id="什麼是兒童急性壞死性腦病-ANEC-？"><a href="#什麼是兒童急性壞死性腦病-ANEC-？" class="headerlink" title="什麼是兒童急性壞死性腦病(ANEC)？"></a>什麼是兒童急性壞死性腦病(ANEC)？</h3><p>吳昌騰醫師今年1月曾於其<a href="https://zh-tw.facebook.com/TaiwanPerDoctor/posts/268050263890017" target="_blank" rel="noopener">臉書貼文</a>說到：<br><blockquote><p>兒童急性壞死性腦病(acute necrotizing encephalopathy of children，ANEC)絕對是令兒科急診醫師人人驚心動魄的疾病。ANEC是一種高死亡率的腦病變，主要好發於日本、台灣和韓國。目前為止全世界已經有許多的病例報告。雖然致病機轉尚未完全明瞭，不過目前認為此病與人體的免疫系統和代謝有關。不同病毒皆能引發ANEC，包括A型及B型流感、副流感、帶狀泡疹病毒(水痘)、德國痲疹、HHV-6 及 HHV-8、腸道病毒及柯薩奇病毒 A9；ANEC亦分偶發性或遺傳性，死亡率達70%。ANEC具有病情急、進展快、死亡率高等特點，兒童患者常伴隨嘔吐、快速的意識喪失、不同程度肝功能障礙，預後差，存活者常伴有嚴重的神經系統後遺症。目前ANEC尚缺乏有效的治療方法，治療方法通常為支持療法，如抗生素、抗病毒藥物、IVIG等等治療。</p></blockquote></p><p>＊「預後」: 疾病發生後，對疾病未來發展的病程和結果(痊愈、複發、惡化、致殘、 併發症及死亡等)的預測。</p><h3 id="疾病管制署致醫界通函第369號"><a href="#疾病管制署致醫界通函第369號" class="headerlink" title="疾病管制署致醫界通函第369號"></a>疾病管制署致醫界通函第369號</h3><p>衛福部疾管署曾於今年2/26發佈<a href="https://www.cdc.gov.tw/Bulletin/Detail/RZNFvB_786v_kT6tQ2HTBQ?typeid=48" target="_blank" rel="noopener">醫界通函</a>，呼籲臨床醫師針對流感併發腦炎之病例提高警覺：<br><blockquote><p>全國醫界朋友，您好：</p><p>國內自2018年10月1日起累計406例流感併發重症病例(以217例感染H1N1、166例感染H3N2為多)，34例死亡(21例H1N1、13例H3N2)，包含4名孩童死亡病例，其中3名孩童未接種本季流感疫苗。此4名死亡孩童皆併發腦炎，其病毒學檢驗結果皆為H1N1，又其發病至出現神經學症狀中位數為1天(範圍0–4天)，且病程快速惡化，雖均使用流感抗病毒藥物治療，仍於發病後2至5天內死亡。</p><p>根據國內研究，兒童感染流感後約有1–2%出現腦炎症狀，然而其最嚴重的表現為急性壞死性腦病變(acute necrotizing encephalopathy)，死亡率可高達30-40%。<span style="color:red;">疾管署籲請醫師提高警覺，於流感流行季，對於出現疑似腦炎的神經學症狀，如意識改變、抽搐、局部神經學症狀等個案，應儘速進行流感相關檢驗並使用流感抗病毒藥物</span>；另根據日本少數病例治療經驗，針對未侵犯腦幹之急性壞死性腦病變部分個案，早期使用類固醇可能對個案預後有幫忙，請臨床醫師評估個案狀況審慎使用。</p><p>感謝您與我們共同維護全民的健康安全。</p></blockquote></p><p>因為發現疾管署曾發佈此醫界通函，便找了找相關的新聞報導，但我對於ANEC的新聞搜尋結果感到疑惑，只找到幾則於今年2月所發佈關於流感併發腦炎的報導，這才提到兒童急性壞死性腦病這個詞…我以為媒體應該更加關注這樣嚴重的事，呵呵。</p><h3 id="相關文獻"><a href="#相關文獻" class="headerlink" title="相關文獻"></a>相關文獻</h3><h4 id="Acute-necrotising-encephalopathy-of-childhood-a-new-syndrome-presenting-with-multifocal-symmetric-brain-lesions"><a href="#Acute-necrotising-encephalopathy-of-childhood-a-new-syndrome-presenting-with-multifocal-symmetric-brain-lesions" class="headerlink" title="Acute necrotising encephalopathy of childhood: a new syndrome presenting with multifocal, symmetric brain lesions"></a>Acute necrotising encephalopathy of childhood: a new syndrome presenting with multifocal, symmetric brain lesions</h4><p>ANEC係由<a href="https://www.ncnp.go.jp/nin/english/department.html" target="_blank" rel="noopener">日本國立神經科學研究中心</a>的Mizuguchi等人於1995年發表的<a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC1073485/" target="_blank" rel="noopener">論文</a>所提出，文件中回顧了13位接受治療的連續患者與28份報告的病例記錄，描述日本兒童中普遍存在著一種未被識別的急性腦病類型之臨床病理學特徵，於呼吸道感染後，原本健康的兒童開始出現<span style="color:red;">昏迷，抽搐，嘔吐，高燒以及肝腫大等症狀</span>。此急性腦病被認為是多發性兒童急性壞死性腦病的新型實體，<span style="color:red;">電腦斷層掃描與核磁共振結果顯示，ANEC於視丘、白質、腦幹及小腦造成之腦損傷呈現對稱分佈</span>。</p><h4 id="Neuropsychological-outcomes-of-childhood-acute-necrotizing-encephalopathy"><a href="#Neuropsychological-outcomes-of-childhood-acute-necrotizing-encephalopathy" class="headerlink" title="Neuropsychological outcomes of childhood acute necrotizing encephalopathy"></a>Neuropsychological outcomes of childhood acute necrotizing encephalopathy</h4><p>此<a href="https://www.sciencedirect.com/science/article/abs/pii/S0387760419301627" target="_blank" rel="noopener">論文</a>描述了3位ANEC患者的神經心理學結果，研究於經歷ANEC後的18個月至10年之間，對患者長期認知與心理的影響。3個病例均表現出<span style="color:red;">注意力不集中、精細動作困難(例如:書寫、下棋)、焦慮，甚至社交障礙</span>。長期損害的嚴重程度與急性症狀表現及恢復期的神經成像有關，這些研究結果強調了詳細的神經心理學評估和長期恢復之必要性。</p><h4 id="Acute-Necrotizing-Encephalopathy-of-Childhood-with-Novel-Influenza-A-swH1-Infection-A-Case-Report"><a href="#Acute-Necrotizing-Encephalopathy-of-Childhood-with-Novel-Influenza-A-swH1-Infection-A-Case-Report" class="headerlink" title="Acute Necrotizing Encephalopathy of Childhood with Novel Influenza A (swH1) Infection : A Case Report"></a>Acute Necrotizing Encephalopathy of Childhood with Novel Influenza A (swH1) Infection : A Case Report</h4><p>此病例報告為發表於童綜合醫學雜誌(2018，P.123-P.128)上的<a href="http://zh-tw.sltung.com.tw/uploadfiles/files/20190510_092057_4490.pdf" target="_blank" rel="noopener">論文</a>，病患為4歲8個月的女童，發病前相當健康。其初始症狀為間歇性發燒與嘔吐表現，隨著發生<span style="color:red;">抽搐與快速的意識喪失</span>，以及鼻腔檢體分離出豬流感病毒，腦部神經成像出現典型的兒童急性壞死性腦病特徵。此女童於醫療團隊積極使用Oseltamivir(克流感)，搭配immunoglobulin(免疫球蛋白)和methylprednisolone(類固醇)治療後存活下來。</p><hr><h3 id="結論"><a href="#結論" class="headerlink" title="結論"></a>結論</h3><p>這幾天看了些相關資訊與近一年內的文獻，除上述所提到的，還有<a href="https://jcpsp.pk/archive/2019/Jul2019/13.pdf" target="_blank" rel="noopener">ANEC患者之臨床特徵</a>、<a href="https://journals.sagepub.com/doi/abs/10.1177/1535370219846497" target="_blank" rel="noopener">發展小鼠急性腦病模型以釐清致病機制</a>以及針對成人ANE患者的相關研究，於前述臨床特徵的研究中甚至發現，抗病毒藥物搭配免疫調節治療並未改變疾病進程。看來，ANEC至今仍是缺乏有效的治療方法，但我相信醫學研究很快就會找到答案的。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;前幾天於PTT看到某篇&lt;a href=&quot;https://www.ptt.cc/bbs/BabyMother/M.1566400996.A.FC7.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;媽寶版的文章&lt;/a&gt;，才知道如此令人心碎的疾病。
    
    </summary>
    
      <category term="Study" scheme="https://laplacetw.github.io/categories/Study/"/>
    
    
      <category term="ANEC" scheme="https://laplacetw.github.io/tags/ANEC/"/>
    
      <category term="influenza" scheme="https://laplacetw.github.io/tags/influenza/"/>
    
  </entry>
  
  <entry>
    <title>南科自造基地研習Part 1</title>
    <link href="https://laplacetw.github.io/maker-space-workshop-part-1/"/>
    <id>https://laplacetw.github.io/maker-space-workshop-part-1/</id>
    <published>2019-08-18T15:46:01.000Z</published>
    <updated>2019-09-01T10:55:57.132Z</updated>
    
    <content type="html"><![CDATA[<p>系統晶片應用―以無線心律檢測為例。<br><a id="more"></a><br>Part 1於8/14 ~ 8/16在成大系統系館進行，講師為Prof. Shuenn-Yuh Lee。</p><h3 id="研習內容大綱"><a href="#研習內容大綱" class="headerlink" title="研習內容大綱"></a>研習內容大綱</h3><p><br></p><ul><li>應用於智慧互動照護與監控系統之體外感測網路簡介</li><li>應用於身體感測網路之低功率無線心電訊號擷取電路與系統<ul><li>ZigBee無線心電訊號擷取系統晶片</li><li>身體感測網路之低功率無線心電訊號擷取與分類系統</li></ul></li><li>應用於神經調節之植入式身體感測網路</li><li>應用於植入式身體感測網路之低功率雙向遙測裝置結合微型心臟起搏器</li></ul><hr><h3 id="筆記"><a href="#筆記" class="headerlink" title="筆記"></a>筆記</h3><p><br></p><ul><li>IP-Based vs. Solution-Based</li><li>遠距醫療照護服務的潛在市場與預期成長</li><li>心肌於心搏週期中之極化、去極化、再極化</li><li>心電圖(ECG)之P波、QRS波群和T波之簡易判讀</li><li>從實驗室走向產品化所面臨的挑戰<ul><li>居家照護系統</li><li>裝置續航力―低功耗設計</li><li>使用便利性―無線傳輸</li><li>訊號解析度對診斷精確度之影響</li><li>診斷結果對醫生與使用者之呈現</li></ul></li><li>Wi-Fi/Bluetooth/ZigBee應用於穿戴式裝置無線傳輸之可行性評估</li><li>無線生物訊號擷取SoC所整合之元件架構介紹<ul><li>涉及過多電子學知識，個人認知無法消化…QQ</li></ul></li><li>植入式微型電刺激器之應用<ul><li>心臟起搏器</li><li>人工耳蝸</li><li>人工視網膜</li><li>功能性神經肌肉電刺激器</li><li>膀胱控制</li><li>深層腦部電刺激</li></ul></li></ul><h3 id="實作練習"><a href="#實作練習" class="headerlink" title="實作練習"></a>實作練習</h3><ul><li>使用HSPICE進行電路模擬測試驗證</li></ul><p>＊HSPICE筆記</p><ul><li>以電晶體、二極體、電阻和電容等各種電子元件模型為基礎，經數值模擬分析計算出電路中各結點之電壓、電流</li><li>主要提供直流穩態(DC)、暫態(TRAN)以及小信號頻率響應(AC)的模擬，使用者可依照所設計之電路自行編寫模擬分析等控制指令</li><li>語法規則<ul><li>指令檔(.sp)第一行預設不會執行，使用慣例為撰寫標題用</li><li>英文字母大小寫無區分</li><li>指令執行並無先後順序</li><li>註解符號為 ‘*’(星號)</li><li>指令檔需以 ‘.END’宣告結束</li><li>引入元件庫 : .lib ‘filepath’ TT</li><li>引入子電路 : .include ‘filepath’</li><li>將引入元件庫指令放在.protect &amp; .unprotect之間，可於模擬時不顯示元件之製程參數</li><li>宣告變數 : .param param_name = value</li><li>呼叫元件―MOSFET : M11 n1 n2 n3 n4 N_18 W=10u L=1u m=2<ul><li>M11的M代表MOSFET，11為自定義元件名稱，如同程式語言中的變數名稱</li><li>MOSFET為四端元件，因此n1 ~ n4依序代表其D、G、S、B端點所連接的節點</li><li>N_18表示呼叫元件庫中名稱為N_18的MOSFET元件</li><li>W &amp; L參數為指定MOSFET元件之寬度與通道長度</li><li>m = 2代表將兩個Ｍ11元件並聯，此為“抽象上的並聯”，也就是說呼叫這個MOSFET元件時，實際寬度為W x m，當所需的MOSFET寬度超出製程規定區間時，可適當地利用此參數來做調整</li></ul></li></ul></li></ul><table><thead><tr><th style="text-align:center">元件代號</th><th style="text-align:center">對應元件  </th></tr></thead><tbody><tr><td style="text-align:center">V</td><td style="text-align:center">Voltage Source</td></tr><tr><td style="text-align:center">I</td><td style="text-align:center">Current Source</td></tr><tr><td style="text-align:center">R</td><td style="text-align:center">Resistor</td></tr><tr><td style="text-align:center">L</td><td style="text-align:center">Inductor</td></tr><tr><td style="text-align:center">C</td><td style="text-align:center">Capacitor</td></tr><tr><td style="text-align:center">M</td><td style="text-align:center">MOSFET</td></tr><tr><td style="text-align:center">X</td><td style="text-align:center">Sub-Circuit</td></tr></tbody></table><p>控制指令 :</p><table><thead><tr><th style="text-align:center">指令</th><th style="text-align:center">作用  </th></tr></thead><tbody><tr><td style="text-align:center">.AC</td><td style="text-align:center">交流分析(頻率響應)</td></tr><tr><td style="text-align:center">.DC</td><td style="text-align:center">直流分析</td></tr><tr><td style="text-align:center">.OP</td><td style="text-align:center">靜態點分析</td></tr><tr><td style="text-align:center">.NOISE</td><td style="text-align:center">雜訊分析</td></tr><tr><td style="text-align:center">.TRAN</td><td style="text-align:center">暫態分析</td></tr><tr><td style="text-align:center">.SUBCKT</td><td style="text-align:center">定義子電路</td></tr><tr><td style="text-align:center">.ENDS</td><td style="text-align:center">子電路定義結束</td></tr><tr><td style="text-align:center">.OPTIONS</td><td style="text-align:center">設定參數及其他功能</td></tr><tr><td style="text-align:center">.PRINT</td><td style="text-align:center">指定輸出內容</td></tr><tr><td style="text-align:center">.PLOT</td><td style="text-align:center">視覺化輸出</td></tr><tr><td style="text-align:center">.TEMP</td><td style="text-align:center">指定模擬環境溫度</td></tr><tr><td style="text-align:center">.END</td><td style="text-align:center">指令檔編寫結束</td></tr></tbody></table><hr><h3 id="心得"><a href="#心得" class="headerlink" title="心得"></a>心得</h3><p><br><br>很幸運能參與自造基地這一系列的研習，關於Part 1的研習內容，雖然資工人沒學過電子學(我想我該找本電子學來研讀😅)，De Morgan’s laws也不大記得了😂，但知識不嫌多，聽在心裡想在腦子裡，總是有個概念。而李教授除了課程內容，也講了許多受用的觀念，特別是Solution-Based的概念令我相當有感，投入職場至今確實見到台廠普遍沒有系統整合的概念，撇開台積電那樣將晶圓代工做到極致的特例不談，即使我們有先進工業製程能生產各種精密機械與零組件，卻無法發揮其最大價值，因為我們習慣當打工仔，不負責兜出完整的終端產品。</p><p>研習課程的最後由李老師所指導的優秀博士生助教帶大家使用HSPICE來模擬電路，雖然我不懂如何完整編寫出模擬電路，但資工人對於電腦語言總是有點Sense😎，理解語法規則後，也是看得懂每一行在做些什麼的，例如元件庫和子電路的概念，就如同程式語言中的函式庫及自訂函式。</p><p>感謝Prof. Shuenn-Yuh Lee與助教們的用心講解，受益良多。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;系統晶片應用―以無線心律檢測為例。&lt;br&gt;
    
    </summary>
    
      <category term="Workshop" scheme="https://laplacetw.github.io/categories/Workshop/"/>
    
    
      <category term="ecg" scheme="https://laplacetw.github.io/tags/ecg/"/>
    
      <category term="wireless" scheme="https://laplacetw.github.io/tags/wireless/"/>
    
      <category term="hspice" scheme="https://laplacetw.github.io/tags/hspice/"/>
    
  </entry>
  
  <entry>
    <title>以 MLP with Keras 進行手寫數字辨識測試</title>
    <link href="https://laplacetw.github.io/data-sci-ml-hello-world-mnist/"/>
    <id>https://laplacetw.github.io/data-sci-ml-hello-world-mnist/</id>
    <published>2019-08-12T18:15:24.000Z</published>
    <updated>2019-08-23T17:27:08.369Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Load-MNIST-Data-Set"><a href="#Load-MNIST-Data-Set" class="headerlink" title="Load MNIST Data Set"></a>Load MNIST Data Set</h2><a id="more"></a><p>載入60000筆訓練資料與10000筆測試資料。<br><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(train_feature, train_label), (test_feature, test_label) = mnist.load_data()</span><br></pre></td></tr></table></figure></p><h2 id="Data-Preprocessing"><a href="#Data-Preprocessing" class="headerlink" title="Data Preprocessing"></a>Data Preprocessing</h2><h3 id="Reshape"><a href="#Reshape" class="headerlink" title="Reshape"></a>Reshape</h3><p>將28x28特徵值 Raw Data(圖片)轉換為32位元浮點數一維資料。<br><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">train_feature_vector = train_feature.reshape(len(train_feature), <span class="number">784</span>).astype(<span class="string">'float32'</span>)</span><br><span class="line">test_feature_vector = test_feature.reshape(len(test_feature), <span class="number">784</span>).astype(<span class="string">'float32'</span>)</span><br></pre></td></tr></table></figure></p><h3 id="Feature-Normalization"><a href="#Feature-Normalization" class="headerlink" title="Feature Normalization"></a>Feature Normalization</h3><p>對特徵值進行正規化處理，也就是將數據按比例縮放至[0, 1]區間，且不改變其原本分佈，以提升模型的訓練收斂速度與預測精準度。<br><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">train_feature_normal = train_feature_vector / <span class="number">255</span></span><br><span class="line">test_feature_normal = test_feature_vector / <span class="number">255</span></span><br></pre></td></tr></table></figure></p><h3 id="One-Hot-Encoding"><a href="#One-Hot-Encoding" class="headerlink" title="One-Hot Encoding"></a>One-Hot Encoding</h3><p>對離散型資料標籤進行獨熱編碼處理轉換為布林陣列，以進行矩陣運算。<br><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">train_label_onehot = np_utils.to_categorical(train_label)</span><br><span class="line">test_label_onehot = np_utils.to_categorical(test_label)</span><br></pre></td></tr></table></figure></p><h2 id="Model-Definition"><a href="#Model-Definition" class="headerlink" title="Model Definition"></a>Model Definition</h2><p>定義循序(線性)模型之結構、訓練方法、準確率評估<br><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">model = Sequential()</span><br></pre></td></tr></table></figure></p><h3 id="Layer-Definition"><a href="#Layer-Definition" class="headerlink" title="Layer Definition"></a>Layer Definition</h3><p>定義輸入層、隱藏層、輸出層 :</p><ul><li>神經元個數 : 784 –&gt; 256 –&gt; 10</li><li>常態分佈亂數初始化權重＆偏移值</li><li>活化函數採用 Relu &amp; Softmax</li></ul><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">model.add( Dense(units=<span class="number">256</span>, input_dim=<span class="number">784</span>, init=<span class="string">'normal'</span>, activation=<span class="string">'relu'</span>) )</span><br><span class="line">model.add( Dense(units=<span class="number">10</span>, init=<span class="string">'normal'</span>, activation=<span class="string">'softmax'</span>) )</span><br></pre></td></tr></table></figure><h3 id="Training-Definition"><a href="#Training-Definition" class="headerlink" title="Training Definition"></a>Training Definition</h3><p>定義訓練方法 : </p><ul><li>損失函數採用 Cross Entropy</li><li>優化器採用 Adam</li><li>驗證資料分割比例為0.2</li><li>訓練批次為10</li><li>每批次樣本數為200</li></ul><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">model.compile(loss=<span class="string">'categorical_crossentropy'</span>, optimizer=<span class="string">'adam'</span>, metrics=[<span class="string">'accuracy'</span>])</span><br><span class="line">model.fit(x=train_feature_normal, y=train_label_onehot, validation_split=<span class="number">0.2</span>, epochs=<span class="number">10</span>, batch_size=<span class="number">200</span>, verbose=<span class="number">2</span>)</span><br></pre></td></tr></table></figure><h3 id="Accuracy-Evaluation"><a href="#Accuracy-Evaluation" class="headerlink" title="Accuracy Evaluation"></a>Accuracy Evaluation</h3><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">accuracy = model.evaluate(test_feature_normal, test_label_onehot)</span><br><span class="line">print(<span class="string">'\n[Accuracy] = '</span>, accuracy[<span class="number">1</span>])</span><br></pre></td></tr></table></figure><h3 id="Save-amp-Load-Model"><a href="#Save-amp-Load-Model" class="headerlink" title="Save &amp; Load Model"></a>Save &amp; Load Model</h3><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># save</span></span><br><span class="line">model.save(<span class="string">"mdl_mlp_mnist.h5"</span>)</span><br><span class="line"><span class="comment"># load</span></span><br><span class="line">model = load_model(<span class="string">"mdl_mlp_mnist.h5"</span>)</span><br></pre></td></tr></table></figure><hr><h2 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h2><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">from</span> keras.utils <span class="keyword">import</span> np_utils</span><br><span class="line"><span class="keyword">from</span> keras.datasets <span class="keyword">import</span> mnist</span><br><span class="line"><span class="keyword">from</span> keras.models <span class="keyword">import</span> Sequential</span><br><span class="line"><span class="keyword">from</span> keras.layers <span class="keyword">import</span> Dense</span><br><span class="line"><span class="keyword">from</span> keras.models <span class="keyword">import</span> load_model</span><br><span class="line">np.random.seed(<span class="number">1234</span>)  <span class="comment"># for reproducibility</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">showPredict</span><span class="params">(imgs, lbls, predictions)</span>:</span></span><br><span class="line">    plt.gcf().set_size_inches(<span class="number">10</span>, <span class="number">10</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, <span class="number">10</span>):</span><br><span class="line">        fig = plt.subplot(<span class="number">2</span>, <span class="number">5</span>, i + <span class="number">1</span>)</span><br><span class="line">        fig.imshow(imgs[i], cmap=<span class="string">'binary'</span>)</span><br><span class="line"></span><br><span class="line">        title = <span class="string">'prediction = '</span> + str(predictions[i])</span><br><span class="line">        <span class="keyword">if</span> predictions[i] != lbls[i]:</span><br><span class="line">            title += <span class="string">'(X)'</span></span><br><span class="line"></span><br><span class="line">        title += <span class="string">'\nlabel = '</span> + str(lbls[i])</span><br><span class="line">        fig.set_title(title, fontsize=<span class="number">10</span>)</span><br><span class="line">        fig.set_xticks([])</span><br><span class="line">        fig.set_yticks([])</span><br><span class="line">    </span><br><span class="line">    plt.show()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">mdlTrain</span><span class="params">(train_feature, train_label, test_feature, test_label)</span>:</span></span><br><span class="line">    <span class="comment"># model definition</span></span><br><span class="line">    model = Sequential()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># input:784, hidden:256, output:10</span></span><br><span class="line">    model.add( Dense(units=<span class="number">256</span>, input_dim=<span class="number">784</span>, init=<span class="string">'normal'</span>, activation=<span class="string">'relu'</span>) )</span><br><span class="line">    model.add( Dense(units=<span class="number">10</span>, init=<span class="string">'normal'</span>, activation=<span class="string">'softmax'</span>) )</span><br><span class="line"></span><br><span class="line">    <span class="comment"># training definition</span></span><br><span class="line">    model.compile(loss=<span class="string">'categorical_crossentropy'</span>, optimizer=<span class="string">'adam'</span>, metrics=[<span class="string">'accuracy'</span>])</span><br><span class="line">    model.fit(x=train_feature, y=train_label, validation_split=<span class="number">0.2</span>, epochs=<span class="number">10</span>, batch_size=<span class="number">200</span>, verbose=<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># accuracy evaluation</span></span><br><span class="line">    accuracy = model.evaluate(test_feature, test_label)</span><br><span class="line">    print(<span class="string">'\n[Accuracy] = '</span>, accuracy[<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> model</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># load mnist data</span></span><br><span class="line">(train_feature, train_label), (test_feature, test_label) = mnist.load_data()</span><br><span class="line"></span><br><span class="line"><span class="comment"># data preprocessing</span></span><br><span class="line"><span class="comment"># reshape</span></span><br><span class="line">train_feature_vector = train_feature.reshape(len(train_feature), <span class="number">784</span>).astype(<span class="string">'float32'</span>)</span><br><span class="line">test_feature_vector = test_feature.reshape(len(test_feature), <span class="number">784</span>).astype(<span class="string">'float32'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># feature normalization </span></span><br><span class="line">train_feature_normal = train_feature_vector / <span class="number">255</span></span><br><span class="line">test_feature_normal = test_feature_vector / <span class="number">255</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># one-hot encoding</span></span><br><span class="line">train_label_onehot = np_utils.to_categorical(train_label)</span><br><span class="line">test_label_onehot = np_utils.to_categorical(test_label)</span><br><span class="line"></span><br><span class="line">action = input(<span class="string">"1: Model Testing\n2: Model Training\n"</span>)</span><br><span class="line"><span class="keyword">if</span> action == <span class="string">"1"</span>:</span><br><span class="line">    print(<span class="string">"Load mdl_mlp_mnist.h5"</span>)</span><br><span class="line">    model = load_model(<span class="string">"mdl_mlp_mnist.h5"</span>)</span><br><span class="line">    prediction = model.predict_classes(test_feature_normal)</span><br><span class="line">    showPredict(test_feature, test_label, prediction)</span><br><span class="line">    <span class="keyword">del</span> model</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">"===== Start training ====="</span>)</span><br><span class="line">    model = mdlTrain(train_feature_normal, train_label_onehot, test_feature_normal, test_label_onehot)</span><br><span class="line">    model.save(<span class="string">"mdl_mlp_mnist.h5"</span>)</span><br><span class="line">    print(<span class="string">"===== Model has been saved ====="</span>)</span><br><span class="line">    prediction = model.predict_classes(test_feature_normal)</span><br><span class="line">    showPredict(test_feature, test_label, prediction)</span><br><span class="line">    <span class="keyword">del</span> model</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/IPC8oCO.png" alt="IPC8oCO.png"><br><img src="https://i.imgur.com/qCt4QIA.png" alt="qCt4QIA.png"></p><hr><p>＊測試程式指定隨機亂數種子是為了<a href="https://keras.io/zh/getting-started/faq/#how-can-i-obtain-reproducible-results-using-keras-during-development" target="_blank" rel="noopener">再現性</a></p><p>＊下載 MNIST 資料集時若發生 <a href="https://stackoverflow.com/questions/41691327/ssl-sslerror-ssl-certificate-verify-failed-certificate-verify-failed-ssl-c/41692664?utm_medium=organic&amp;utm_source=google_rich_qa&amp;utm_campaign=google_rich_qa" target="_blank" rel="noopener">ssl.SSLError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed</a>，在 Terminal 執行以下命令 :<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/Applications/Python\ 3.6/Install\ Certificates.command</span><br></pre></td></tr></table></figure><br><img src="https://i.imgur.com/yzVEsvh.png" alt="yzVEsvh.png"></p><p>📄<a href="https://keras.io/zh/" target="_blank" rel="noopener">Keras中文說明文件</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Load-MNIST-Data-Set&quot;&gt;&lt;a href=&quot;#Load-MNIST-Data-Set&quot; class=&quot;headerlink&quot; title=&quot;Load MNIST Data Set&quot;&gt;&lt;/a&gt;Load MNIST Data Set&lt;/h2&gt;
    
    </summary>
    
      <category term="Data Science" scheme="https://laplacetw.github.io/categories/Data-Science/"/>
    
    
      <category term="keras" scheme="https://laplacetw.github.io/tags/keras/"/>
    
      <category term="mnist" scheme="https://laplacetw.github.io/tags/mnist/"/>
    
      <category term="machine learning" scheme="https://laplacetw.github.io/tags/machine-learning/"/>
    
  </entry>
  
  <entry>
    <title>使用 Selenium 模組控制瀏覽器</title>
    <link href="https://laplacetw.github.io/data-sci-use-selenium-with-chrome-driver/"/>
    <id>https://laplacetw.github.io/data-sci-use-selenium-with-chrome-driver/</id>
    <published>2019-08-10T17:21:20.000Z</published>
    <updated>2019-08-23T17:28:01.058Z</updated>
    
    <content type="html"><![CDATA[<p>自從開發環境轉移到 Mac OS 後，倒是沒有在這環境下測試用 Selenium 去控制瀏覽器，不過我並不想控制 Safari ，因為它不是一個跨平台的瀏覽器。<br><a id="more"></a><br>第一次使用 Selenium 是學習 Web Crawler 的過程中發現，在瀏覽器中可見的物件並不代表一定爬得到(初心者😗)，於是我了解到那些自己抓不到的數據是由 JavaScript 所動態產生的，因為我向目標伺服器所發出的 request 只能取得靜態的數據，若要進行進階的動態網頁資料擷取，那麼我就必須學習如何用程式碼去控制瀏覽器。</p><hr><h2 id="Install-Selenium"><a href="#Install-Selenium" class="headerlink" title="Install Selenium"></a>Install Selenium</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ pip3 install selenium</span><br></pre></td></tr></table></figure><h2 id="Download-Chrome-Driver"><a href="#Download-Chrome-Driver" class="headerlink" title="Download Chrome Driver"></a>Download Chrome Driver</h2><p>要讓 Selenium 能夠控制 Chrome 瀏覽器，需要<span style="color:red;">對應版本</span>的 <a href="https://chromedriver.storage.googleapis.com/index.html" target="_blank" rel="noopener">ChromeDriver</a>，例如我的 Chrome 為目前的最新版本 76.0.3809.100，那麼我就下載 ver.76 最新的 76.0.3809.68 版本 ChromeDriver，然後把 ChromeDriver 放在適當的路徑下，以便在程式中呼叫。</p><h2 id="Test"><a href="#Test" class="headerlink" title="Test"></a>Test</h2><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.chrome.options <span class="keyword">import</span> Options</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getChrome</span><span class="params">(show=False)</span>:</span>  <span class="comment"># return chrome handler</span></span><br><span class="line">    WINDOW_SIZE = <span class="string">"1366, 768"</span>  <span class="comment"># screen size</span></span><br><span class="line">    CHROMEDRIVER_PATH = <span class="string">r"/Users/nick/Downloads/chromedriver"</span></span><br><span class="line"></span><br><span class="line">    options = Options()  <span class="comment"># config</span></span><br><span class="line">    options.add_argument(<span class="string">"log-level=3"</span>)  <span class="comment"># shut the logging</span></span><br><span class="line">    options.add_argument(<span class="string">"--window-size=%s"</span> % WINDOW_SIZE)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> show: options.add_argument(<span class="string">"--headless"</span>)  <span class="comment"># headless mode</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> webdriver.Chrome(CHROMEDRIVER_PATH, chrome_options=options)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">chrome = getChrome()</span><br><span class="line">chrome.get(<span class="string">"https://laplacetw.github.io/categories/"</span>)</span><br><span class="line">time.sleep(<span class="number">1</span>)</span><br><span class="line">chrome.save_screenshot(<span class="string">"screenshot.png"</span>)</span><br><span class="line">chrome.quit()</span><br></pre></td></tr></table></figure><p>測試程式若順利執行的話，在檔案目錄下應該會發現多了個執行畫面的截圖 :<br><img src="https://i.imgur.com/5qmRipW.png" alt="5qmRipW.png"></p><p>getChrome()預設會用 headless 模式啟動 Chrome，若想顯示使用者介面的話可以將 “show” 這個參數設為 True，如此便能看到自動化執行 Chrome 的過程。但實際應用的情況下非必要就別啟動圖形介面了，執行速度會快很多的😎</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;自從開發環境轉移到 Mac OS 後，倒是沒有在這環境下測試用 Selenium 去控制瀏覽器，不過我並不想控制 Safari ，因為它不是一個跨平台的瀏覽器。&lt;br&gt;
    
    </summary>
    
      <category term="Data Science" scheme="https://laplacetw.github.io/categories/Data-Science/"/>
    
    
      <category term="python" scheme="https://laplacetw.github.io/tags/python/"/>
    
      <category term="web crawler" scheme="https://laplacetw.github.io/tags/web-crawler/"/>
    
      <category term="selenium" scheme="https://laplacetw.github.io/tags/selenium/"/>
    
      <category term="chromedriver" scheme="https://laplacetw.github.io/tags/chromedriver/"/>
    
  </entry>
  
  <entry>
    <title>關於 SharePoint REST API</title>
    <link href="https://laplacetw.github.io/sharepoint-rest-api/"/>
    <id>https://laplacetw.github.io/sharepoint-rest-api/</id>
    <published>2019-08-09T13:57:31.000Z</published>
    <updated>2019-08-10T08:49:12.707Z</updated>
    
    <content type="html"><![CDATA[<p>這是一段關於沒有伺服器權限的開發者於 SharePoint 進行網站開發的恐怖故事。<br><a id="more"></a><br>這段故事實在是太可怕了，伺服器權限在資訊單位手裡，而完全不懂 SharePoint 也不會 .NET 的我只有使用者權限帳號(黑人問號.jpg)，看著一點幫助都沒有的 training kit 文件，我必須想辦法把它寫成一個入口網站…</p><p>經過摸索研究最終想出了解決方法，我自製母版定義了導航列與頁腳，並利用內容編輯器這個 Web Part 在每個頁面「填入」我要的 HTML 內容，但不得不放棄內建的其他 Web Part，因為我根本無法完全控制那些頑固的東西，它們讓整個頁面佈局看起來相當糟糕!!!</p><p>但如此我便擁有整個頁面內容的控制權了，前端頁面佈局樣式就交給 Bootstrap 去搞定啦，而後端就只能依賴 SharePoint REST API 去處理 CRUD。</p><p>雖然很荒謬但我還是硬著頭皮上了，最後寫了個多功能的 SharePoint 企業內網 :</p><ul><li>公告</li><li>行事曆(支援批次匯入事件)</li><li>會議室預約</li><li>工時追蹤填報(支援統計圖表)</li><li>出勤狀況發佈(系統通知信)</li><li>討論區</li><li>Smart Chat Bot(答覆公司系統與網站相關問題)</li></ul><p>這任務至此告一段落了，紀錄一下 SharePoint REST API 如何使用 : </p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> api_create = <span class="string">"https://server/site/_api/web/lists('&#123; your_list_guid &#125;')/items"</span>,</span><br><span class="line">    api_read = <span class="string">"https://server/site/_api/web/lists('&#123; your_list_guid &#125;')/items( &#123; your_list_item_id &#125; )"</span>,</span><br><span class="line">    api_update = <span class="string">"https://server/site/_api/web/lists('&#123; your_list_guid &#125;')/items( &#123; your_list_item_id &#125; )"</span>,</span><br><span class="line">    api_delete = <span class="string">"https://server/_api/web/lists('&#123; your_list_guid &#125;')/items( &#123; your_list_item_id &#125; )"</span>,</span><br><span class="line">    data =&#123;</span><br><span class="line">        __metadata: &#123; <span class="string">'type'</span>: <span class="string">'SP.Data.&#123; your_list_item_entity_type_fullname &#125;'</span> &#125;,</span><br><span class="line">        &#123; list_column_name &#125; : &#123; value &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sp_create</span>(<span class="params">api_create</span>)</span>&#123;</span><br><span class="line">    $.ajax(&#123;</span><br><span class="line">        url: api_create,</span><br><span class="line">        method: <span class="string">"POST"</span>,</span><br><span class="line">        data: <span class="built_in">JSON</span>.stringify(data),</span><br><span class="line">        contentType: <span class="string">"application/json; odata=verbose"</span>,</span><br><span class="line">        headers:&#123;</span><br><span class="line">            <span class="string">"Accept"</span>: <span class="string">"application/json; odata=verbose"</span>,</span><br><span class="line">            <span class="string">"X-RequestDigest"</span>: $(<span class="string">"#__REQUESTDIGEST"</span>).val()</span><br><span class="line">        &#125;,</span><br><span class="line">        success: <span class="function"><span class="keyword">function</span>(<span class="params">res</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">let</span> data = res.d; <span class="comment">// the data you create</span></span><br><span class="line">            <span class="comment">// do something</span></span><br><span class="line">        &#125;,</span><br><span class="line">        error: <span class="function"><span class="keyword">function</span>(<span class="params">error</span>)</span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="built_in">JSON</span>.stringify(error));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sp_read</span>(<span class="params">api_read</span>)</span>&#123;</span><br><span class="line">    $.ajax(&#123;</span><br><span class="line">        url: api_read,</span><br><span class="line">        type: <span class="string">"GET"</span>,</span><br><span class="line">        headers: &#123;</span><br><span class="line">            <span class="string">"accept"</span>:<span class="string">"application/json; odata=verbose"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        success: <span class="function"><span class="keyword">function</span>(<span class="params">res</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">let</span> data = res.d; <span class="comment">// the data you read</span></span><br><span class="line">            <span class="comment">// do something</span></span><br><span class="line">        &#125;,</span><br><span class="line">        error: <span class="function"><span class="keyword">function</span>(<span class="params">error</span>)</span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="built_in">JSON</span>.stringify(error));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sp_update</span>(<span class="params">api_update</span>)</span>&#123;</span><br><span class="line">    $.ajax(&#123;</span><br><span class="line">        url: api_update,</span><br><span class="line">        method: <span class="string">"POST"</span>,</span><br><span class="line">        data: <span class="built_in">JSON</span>.stringify(data),</span><br><span class="line">        contentType: <span class="string">"application/json; odata=verbose"</span>,</span><br><span class="line">        headers: &#123;</span><br><span class="line">            <span class="string">"Accept"</span>: <span class="string">"application/json;odata=verbose"</span>,</span><br><span class="line">            <span class="string">"X-RequestDigest"</span>: $(<span class="string">"#__REQUESTDIGEST"</span>).val(),</span><br><span class="line">            <span class="string">"IF-MATCH"</span>: <span class="string">"*"</span>,</span><br><span class="line">            <span class="string">"X-Http-Method"</span>: <span class="string">"MERGE"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        success: <span class="function"><span class="keyword">function</span>(<span class="params">res</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">let</span> data = res.d; <span class="comment">// the data you update</span></span><br><span class="line">            <span class="comment">// do something</span></span><br><span class="line">        &#125;,</span><br><span class="line">        error: <span class="function"><span class="keyword">function</span>(<span class="params">error</span>)</span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="built_in">JSON</span>.stringify(error));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sp_delete</span>(<span class="params">api_delete</span>)</span>&#123;</span><br><span class="line">    $.ajax(&#123;</span><br><span class="line">        url: api,</span><br><span class="line">        method: <span class="string">'DELETE'</span>,</span><br><span class="line">        headers: &#123;</span><br><span class="line">            <span class="string">"Accept"</span>: <span class="string">"application/json;odata=verbose"</span>,</span><br><span class="line">            <span class="string">"X-RequestDigest"</span>: $(<span class="string">"#__REQUESTDIGEST"</span>).val(),</span><br><span class="line">            <span class="string">"IF-MATCH"</span>: <span class="string">"*"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        success: <span class="function"><span class="keyword">function</span>(<span class="params">res</span>)</span>&#123;</span><br><span class="line">            <span class="comment">// do something</span></span><br><span class="line">        &#125;,</span><br><span class="line">        error: <span class="function"><span class="keyword">function</span>(<span class="params">error</span>)</span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="built_in">JSON</span>.stringify(error));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/* filter &amp; select &amp; order(asc / desc)</span></span><br><span class="line"><span class="comment">"https://server/_api/web/lists('&#123; your_list_guid &#125;')/items?$filter=&#123; list_column_name &#125; eq &#123; keyword &#125;&amp;$select=ID,AuthorId,Created,...&amp;$orderby=&#123; list_column_name &#125; desc"</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>特別留意 SharePoint REST API 返回的資料筆數預設值是100筆，這在我寫的會議室預約功能所依賴的資料庫筆數超過100之後，因為使用者反應預約完成的會議卻沒有顯示在頁面上而發現。此問題只要在 API 裡頭加上一個 “TOP”參數並指定返回的資料筆數即可解決，例如「TOP=5000」，而 API 能返回的最大值為5000筆。如果需要返回更多筆資料，印象中看過網路上相關討論，但我用在查詢會議室預約這樣有時效性的資料，估計5000筆已經綽綽有餘了XDD</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;這是一段關於沒有伺服器權限的開發者於 SharePoint 進行網站開發的恐怖故事。&lt;br&gt;
    
    </summary>
    
      <category term="SharePoint" scheme="https://laplacetw.github.io/categories/SharePoint/"/>
    
    
      <category term="web" scheme="https://laplacetw.github.io/tags/web/"/>
    
      <category term="sharepoint" scheme="https://laplacetw.github.io/tags/sharepoint/"/>
    
  </entry>
  
  <entry>
    <title>第一次吃樹莓派</title>
    <link href="https://laplacetw.github.io/rspi-meet-raspberry-pi-b3-plus/"/>
    <id>https://laplacetw.github.io/rspi-meet-raspberry-pi-b3-plus/</id>
    <published>2019-05-18T16:12:17.000Z</published>
    <updated>2019-08-10T08:53:01.386Z</updated>
    
    <content type="html"><![CDATA[<p>樹莓派3B+初始化安裝。<br><a id="more"></a></p><p><img src="https://i.imgur.com/wIdoqQ8.jpg" alt><br><img src="https://i.imgur.com/Dec2LcF.jpg" alt></p><h3 id="Operation-System"><a href="#Operation-System" class="headerlink" title="Operation System"></a>Operation System</h3><p>參考了<a href="http://blog.itist.tw/2016/12/34-best-operating-systems-for-raspberry-pi.html" target="_blank" rel="noopener">IT技術家</a>所整理的作業系統清單，我決定直接安裝官方發行的Raspbian OS。</p><ul><li><a href="https://www.raspberrypi.org/downloads/raspbian/" target="_blank" rel="noopener">Raspbian載點</a></li><li><a href="https://www.raspberrypi.org/documentation/installation/installing-images/README.md" target="_blank" rel="noopener">Raspbian安裝指南</a></li><li><a href="https://www.raspberrypi.com.tw/20004/faq-how-to-update-and-upgrade-raspbian/" target="_blank" rel="noopener">更新Raspbian</a></li></ul><p>由於Raspberry Pi是以SD Card來當硬碟(<a href="https://www.raspberrypi.org/documentation/installation/sd-cards.md" target="_blank" rel="noopener">官方說明</a>)，網路上大多建議儲存容量至少8G、寫入速度class 10，加上系統更新考量，於是我準備了一張儲存容量16G、寫入速度class 10的SD Card來當系統儲存空間，以及一支隨身碟來當資料儲存空間。不過官方有特別強調，較高的寫入速度並非記憶卡性能的唯一標準，因為寫入速度通常是藉由犧牲讀取速度和尋軌效能而提升的。</p><blockquote><p>The card class determines the sustained write speed for the card; a class 4 card will be able to write at 4MB/s, whereas a class 10 should be able to attain 10 MB/s. However, it should be noted that this does not mean a class 10 card will outperform a class 4 card for general usage, because often this write speed is achieved at the cost of read speed and increased seek times.</p></blockquote><p>Raspbian鏡像檔目前有3種版本:</p><ul><li>Raspbian Stretch with desktop and recommended software</li><li>Raspbian Stretch with desktop</li><li>Raspbian Stretch Lite<br><img src="https://i.imgur.com/c8sOf6D.png" alt></li></ul><p>Raspberry Pi安裝作業系統有許多方式，直接刷進去SD Card應該是最簡單的方式，官方推薦<a href="https://www.balena.io/etcher/" target="_blank" rel="noopener">Etcher</a>燒錄工具。<br><img src="https://i.imgur.com/lr2zQQi.png" alt></p><h3 id="Connect-to-Wi-Fi-Networks"><a href="#Connect-to-Wi-Fi-Networks" class="headerlink" title="Connect to Wi-Fi Networks"></a>Connect to Wi-Fi Networks</h3><p>將作業系統刷進SD Card後，讓電腦重新讀取記憶卡，在根目錄下建立wpa_supplicant.conf，寫入網路連線參數，可寫入多筆。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">country=TW</span><br><span class="line">ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev</span><br><span class="line">update_config=1</span><br><span class="line">network=&#123;</span><br><span class="line">    ssid=&quot;&#123;SSID&#125;&quot;</span><br><span class="line">    psk=&quot;&#123;Password&#125;&quot;</span><br><span class="line">    key_mgmt=WPA-PSK</span><br><span class="line">    scan_ssid=1</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h3 id="Remote"><a href="#Remote" class="headerlink" title="Remote"></a>Remote</h3><p></p><p><br>SSH連線預設為關閉狀態，如同無線網路設定，在根目錄下建立名稱為’ssh’的檔案即可強制啟用SSH連線。<br><img src="https://i.imgur.com/5X2bahA.png" alt></p><p>我忘了在網路連線設定country參數，所以連線時系統有提醒可以進config設定。<br><img src="https://i.imgur.com/QI8vFEc.png" alt></p><h4 id="在Raspberry-Pi安裝VNC-Remote-Server"><a href="#在Raspberry-Pi安裝VNC-Remote-Server" class="headerlink" title="在Raspberry Pi安裝VNC Remote Server"></a>在Raspberry Pi安裝VNC Remote Server</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo apt-get install tightvncserver -y</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> vncserver  <span class="comment"># run server</span></span></span><br></pre></td></tr></table></figure><p>首次遠端桌面連線時，系統會要求設置連線密碼。<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">pi@raspberrypi:~ $ vncserver</span><br><span class="line">You will require a password to access your desktops.</span><br><span class="line"></span><br><span class="line">Password: </span><br><span class="line">Warning: password truncated to the length of 8.</span><br><span class="line">Verify:   </span><br><span class="line">Would you like to enter a view-only password (y/n)? n</span><br><span class="line"></span><br><span class="line">New 'X' desktop is raspberrypi:1</span><br><span class="line"></span><br><span class="line">Creating default startup script /home/pi/.vnc/xstartup</span><br><span class="line">Starting applications specified in /home/pi/.vnc/xstartup</span><br><span class="line">Log file is /home/pi/.vnc/raspberrypi:1.log</span><br></pre></td></tr></table></figure></p><h4 id="在Google-Chrome安裝VNC-Viewer擴充程式"><a href="#在Google-Chrome安裝VNC-Viewer擴充程式" class="headerlink" title="在Google Chrome安裝VNC Viewer擴充程式"></a>在Google Chrome安裝VNC Viewer擴充程式</h4><p>*<a href="https://chrome.google.com/webstore/iabmpiboiopbgfabjmgeedhcmjenhbla" target="_blank" rel="noopener">VNC Viewer for Google Chrome</a><br><img src="https://i.imgur.com/mKcoeaT.png" alt></p><p>連線Address需指定VNC Server Port，連接阜編碼規則為5900+Display編號。<br>e.g. 192.168.0.2:5901<br><img src="https://i.imgur.com/fnD2RQc.png" alt><br><img src="https://i.imgur.com/dYVH37J.png" alt></p><h3 id="Shutdown"><a href="#Shutdown" class="headerlink" title="Shutdown"></a>Shutdown</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo shutdown -h now</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;樹莓派3B+初始化安裝。&lt;br&gt;
    
    </summary>
    
      <category term="Raspberry Pi" scheme="https://laplacetw.github.io/categories/Raspberry-Pi/"/>
    
    
      <category term="raspberry pi" scheme="https://laplacetw.github.io/tags/raspberry-pi/"/>
    
  </entry>
  
  <entry>
    <title>QArt Coder:客製化QR Code產生器</title>
    <link href="https://laplacetw.github.io/create-qrcode-with-image-by-qart-coder/"/>
    <id>https://laplacetw.github.io/create-qrcode-with-image-by-qart-coder/</id>
    <published>2019-05-11T15:18:57.000Z</published>
    <updated>2019-05-11T16:03:23.004Z</updated>
    
    <content type="html"><![CDATA[<p><del>這是一款真正的</del>影像合成QR Code產生器😎<a id="more"></a></p><p>無意間看到<a href="https://www.playpcesor.com/2019/03/qart-coder-qr-code-logo.html" target="_blank" rel="noopener">電腦玩物的Esor大</a>分享一個很特別的<a href="https://research.swtch.com/qr/draw" target="_blank" rel="noopener">QArt Coder</a>，於是我滿心期待地跑去試用，之前用過的QR Code產生器都是很直白地在QR Code正中央呈現一個縮圖，但這個QArt Coder是將影像用點陣圖的方式呈現～跟QR Code漂亮地結合在一起！</p><p>這個線上工具介面並不複雜，圖片上傳後微調一下，接著點選Save this QR Code，頁面就會產生3種尺寸的QR Code讓人下載<br><img src="https://i.imgur.com/Z1UITpy.png" alt></p><p>但下載的時候有點問題，所以我才寫了這篇XD 直接右鍵儲存影像的話，會發現下載了一個.html檔，在新分頁開啟影像或者下載得到的.html檔都是呈現亂碼的狀態(<del>黃捷式</del>白眼<br><img src="https://i.imgur.com/MZ0yKBM.png" alt></p><p>只好檢查一下網頁原始碼，什麼在新標籤頁打開還是直接拷貝都是不起作用的，對著這張圖片的網頁元件按下<strong>擷取螢幕快照</strong>，就可以成功下載這些QR Code了，但上述是在Mac OS下的操作，我也挺好奇Win OS是否也有個相同狀況XD<br><img src="https://i.imgur.com/AN5xk3Q.png" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;del&gt;這是一款真正的&lt;/del&gt;影像合成QR Code產生器😎
    
    </summary>
    
      <category term="Tools" scheme="https://laplacetw.github.io/categories/Tools/"/>
    
    
      <category term="qr code" scheme="https://laplacetw.github.io/tags/qr-code/"/>
    
  </entry>
  
  <entry>
    <title>Mac Safari網頁檢閱器顯示位置</title>
    <link href="https://laplacetw.github.io/mac-safari-show-web-inspector/"/>
    <id>https://laplacetw.github.io/mac-safari-show-web-inspector/</id>
    <published>2019-05-08T15:09:04.000Z</published>
    <updated>2019-05-08T15:53:44.009Z</updated>
    
    <content type="html"><![CDATA[<p>這東西竟然困擾我兩天，我只記得在Safari檢視網頁原始碼的時候，意外點了某個按鈕，然後它就變成獨立視窗了、然後它就變成獨立視窗了、然後它就變成獨立視窗了…<a id="more"></a>於是我開始把Safari的選單找了一遍又一遍，然後中文關鍵字搜尋只能告訴你該如何在Safari上面叫出這個網頁檢閱器🙄🙄🙄</p><p>最後終於讓我發現，有個國外的老兄在網路上問了<a href="https://macmost.com/forum/how-do-i-make-the-web-inspector-appear-in-the-bottom-half-of-my-browser-window.html" target="_blank" rel="noopener">How Do I Make the Web Inspector Appear In the Bottom Half Of My Browser Window?</a>這樣的問題，我的老天鵝呀，感恩網路！讚嘆網路！</p><p>原來我誤觸的按鈕，會讓網頁檢閱器顯示為獨立視窗<br><img src="https://i.imgur.com/EfnEXsd.png" alt></p><p>按下置於視窗底部的按鈕就回到Safari的底部啦！<br><img src="https://i.imgur.com/lrdRwJV.png" alt></p><p>因為這按鈕在<span style="color:red;">全螢幕模式下不可見</span>，所以我才一直沒注意到這按鈕(傻眼)</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;這東西竟然困擾我兩天，我只記得在Safari檢視網頁原始碼的時候，意外點了某個按鈕，然後它就變成獨立視窗了、然後它就變成獨立視窗了、然後它就變成獨立視窗了…
    
    </summary>
    
      <category term="Mac" scheme="https://laplacetw.github.io/categories/Mac/"/>
    
    
      <category term="mac" scheme="https://laplacetw.github.io/tags/mac/"/>
    
      <category term="safari" scheme="https://laplacetw.github.io/tags/safari/"/>
    
  </entry>
  
  <entry>
    <title>Google App Script ＋ Spread Sheet = 微後端</title>
    <link href="https://laplacetw.github.io/google-app-script-and-spreadsheet/"/>
    <id>https://laplacetw.github.io/google-app-script-and-spreadsheet/</id>
    <published>2019-05-05T17:35:16.000Z</published>
    <updated>2019-05-09T17:59:27.954Z</updated>
    
    <content type="html"><![CDATA[<p>若想以Google表單來做一個簡易的daily time tracking，提交一次表單就是一筆數據，但每天的時間總是會適當地分配，如此就得重複填寫並送出表單…這真是一個不聰明的方法，若自己寫個網頁表單，request又被瀏覽器同源政策擋下來…就試著用App Script來解決這件事吧，我也沒寫過呢。<a id="more"></a></p><h3 id="Create"><a href="#Create" class="headerlink" title="Create"></a>Create</h3><p><a href="https://developers.google.com/apps-script/guides/web" target="_blank" rel="noopener">Google App Script Doc : Web Apps</a></p><blockquote><h4 id="Requirements-for-web-apps"><a href="#Requirements-for-web-apps" class="headerlink" title="Requirements for web apps "></a>Requirements for web apps <p></p></h4><p>A script can be published as a web app if it meets these requirements:</p><p>-It contains a doGet(e) or doPost(e) function.<br>-The function returns an HTML service HtmlOutput object or a Content service TextOutput object.</p></blockquote><p>首先建立Google雲端試算表和App Script，複製試算表網址“docs.google.com/spreadsheets/d/{Sheet ID}/edit#gid=0”當中的{Sheet ID}，寫App Script的時候會需要這部分的資訊。</p><p></p><p><br><img src="https://i.imgur.com/UiGda9u.png" alt></p><p>若找不到App Script，點選連結更多應用程式，過濾Google的應用程式就能看到了，然後就將它連結至個人的雲端硬碟。<br><img src="https://i.imgur.com/4BsYTfE.png" alt></p><p>建好表格欄位後就可以來寫App Script了<br><img src="https://i.imgur.com/NUIlhKk.png" alt></p><h3 id="App-Script"><a href="#App-Script" class="headerlink" title="App Script"></a>App Script</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">doGet</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">  <span class="comment">// parameter</span></span><br><span class="line">  <span class="keyword">var</span> params = e.parameter,</span><br><span class="line">      date = params.Date,</span><br><span class="line">      name = params.Name,</span><br><span class="line">      proj = params.Proj,</span><br><span class="line">      hours = params.Hours,</span><br><span class="line">      des = params.Des;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// google sheet</span></span><br><span class="line">  var spreadSheet = SpreadsheetApp.openById(&#123;Sheet ID&#125;),       # 需要Sheet ID</span><br><span class="line">      sheet = spreadSheet.getSheets()[<span class="number">0</span>],  <span class="comment">// focus on sheet 1</span></span><br><span class="line">      lastRow = sheet.getLastRow();</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// set value &lt;= getRange(row, col)</span></span><br><span class="line">  sheet.getRange(lastRow + <span class="number">1</span>, <span class="number">1</span>).setValue(date);</span><br><span class="line">  sheet.getRange(lastRow + <span class="number">1</span>, <span class="number">2</span>).setValue(name);</span><br><span class="line">  sheet.getRange(lastRow + <span class="number">1</span>, <span class="number">3</span>).setValue(proj);</span><br><span class="line">  sheet.getRange(lastRow + <span class="number">1</span>, <span class="number">4</span>).setValue(hours);</span><br><span class="line">  sheet.getRange(lastRow + <span class="number">1</span>, <span class="number">5</span>).setValue(des);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// complete =&gt; return true</span></span><br><span class="line">  <span class="keyword">return</span> ContentService.createTextOutput(<span class="literal">true</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>app script寫好之後，可以另外寫個debug.gs來執行看看<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">debug</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> status = doGet(&#123;</span><br><span class="line">      <span class="string">"parameter"</span>: &#123;</span><br><span class="line">        <span class="string">"Date"</span> : <span class="string">"2019-05-06"</span>,</span><br><span class="line">        <span class="string">"Name"</span> : <span class="string">"LaplaceTW"</span>,</span><br><span class="line">        <span class="string">"Proj"</span> : <span class="string">"Proj-19-05-06"</span>,</span><br><span class="line">        <span class="string">"Hours"</span> : <span class="string">"4"</span>,</span><br><span class="line">        <span class="string">'Des'</span> :<span class="string">"Daily Time Tracking"</span>,</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;);</span><br><span class="line">  Logger.log(<span class="string">"Status : %s"</span> , status);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure></p><p>沒問題的話，就部署為網路應用程式，部署成功後可取得API網址<br><img src="https://i.imgur.com/f6YkDkO.png" alt></p><h3 id="Test"><a href="#Test" class="headerlink" title="Test"></a>Test</h3><p></p><p><br>用瀏覽器的開發人員模式console發送request測試<br><img src="https://i.imgur.com/DNfVP7p.png" alt><br><img src="https://i.imgur.com/4dbIvcw.png" alt></p><h3 id="Passing-an-array-into-Google-App-Script"><a href="#Passing-an-array-into-Google-App-Script" class="headerlink" title="Passing an array into Google App Script ?"></a>Passing an array into Google App Script ?</h3><p>官方文件對參數的解釋是這樣的:</p><blockquote><p>e.parameter<br>An object of key/value pairs that correspond to the request parameters. Only the first value is returned for parameters that have multiple values.<br>{“name”: “alice”, “n”: “1”}</p></blockquote><blockquote><p>e.parameters<br>An object similar to e.parameter, but with an array of values for each key<br>{“name”: [“alice”], “n”: [“1”, “2”]}</p></blockquote><p>但實際測試的時候我也遇到如同<a href="https://tutorials.webduino.io/zh-tw/docs/socket/useful/google-sheet-1.html" target="_blank" rel="noopener">Webduino官方教學文</a>所說的，怎麼試就是無法透過e.parameters這個欄位傳遞參數呀！最後我也採用了相同的做法(汗)，直接傳遞字串到App Script裡頭再分割數據。<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// doGet(e)</span></span><br><span class="line"><span class="keyword">var</span> params = e.parameter,</span><br><span class="line">    data = [<span class="string">'d1'</span>, <span class="string">'d2'</span>, <span class="string">'d3'</span>, <span class="string">'d4'</span>, <span class="string">'d5'</span>],</span><br><span class="line">    len = data.length,</span><br><span class="line">    counter = <span class="number">1.0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(counter &lt;= len)&#123;</span><br><span class="line">  <span class="keyword">var</span> index = (counter - <span class="number">1.0</span>),</span><br><span class="line">      arr = params[data[index]];</span><br><span class="line">  <span class="keyword">if</span>(arr != <span class="literal">undefined</span>)&#123;</span><br><span class="line">    arr = arr.split(<span class="string">','</span>);</span><br><span class="line">    <span class="comment">// set value &lt;= getRange(row, col)</span></span><br><span class="line">    sheet.getRange(lastRow + counter, <span class="number">1</span>).setValue(arr[<span class="number">0</span>]);</span><br><span class="line">    sheet.getRange(lastRow + counter, <span class="number">2</span>).setValue(arr[<span class="number">1</span>]);</span><br><span class="line">    sheet.getRange(lastRow + counter, <span class="number">3</span>).setValue(arr[<span class="number">2</span>]);</span><br><span class="line">    sheet.getRange(lastRow + counter, <span class="number">4</span>).setValue(arr[<span class="number">3</span>]);</span><br><span class="line">    sheet.getRange(lastRow + counter, <span class="number">5</span>).setValue(arr[<span class="number">4</span>]);</span><br><span class="line">  &#125;</span><br><span class="line">  counter ++;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="Lock"><a href="#Lock" class="headerlink" title="Lock"></a>Lock</h3><p>在透過Ajax對App Script發送請求寫入Spread Sheet的測試過程中，原本前端會對User填寫的每筆數據個別送出Ajax請求，雖然過於頻繁並非好的處理方式，但這也才讓我意識到同時間多個寫入請求的衝突及數據覆寫問題，所以後來整合成一次性的Ajax請求，改為在App Script處理、分割數據的方式。但這樣還沒解決衝突問題，偉大的Google當然也有考量到潛在的寫入衝突問題:</p><blockquote><h4 id="Class-Lock"><a href="#Class-Lock" class="headerlink" title="Class Lock"></a><a href="https://developers.google.com/apps-script/reference/lock/" target="_blank" rel="noopener">Class Lock</a></h4><p>A representation of a mutual-exclusion lock.</p><p>This class allows scripts to make sure that only one instance of the script is executing a given section of code at a time. This is particularly useful for callbacks and triggers, where a user action may cause changes to a shared resource and you want to ensure that aren’t collisions.</p></blockquote><p>藉由鎖定Script的方式，確保每個時刻只會有唯一的讀寫動作，來避免衝突問題。另外，SpreadsheetApp.flush()的使用也需特別留意。<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// get a script lock for modifying a shared resource</span></span><br><span class="line"><span class="keyword">var</span> lock = LockService.getScriptLock();</span><br><span class="line">lock.waitLock(<span class="number">30000</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Do Something</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// you should call SpreadsheetApp.flush() prior to releasing the lock,</span></span><br><span class="line"><span class="comment">// to commit all pending changes to the spreadsheet</span></span><br><span class="line">SpreadsheetApp.flush();</span><br><span class="line">lock.releaseLock();</span><br></pre></td></tr></table></figure></p><h3 id="Version"><a href="#Version" class="headerlink" title="Version"></a>Version</h3><p>這問題耗了我整天的時間在測試…當Script更新並重新部署後，接下來卻發現，Ajax送出的請求一直抓不到參數，每個欄位都是呈現Undefined的狀態，但Debug.gs測試結果卻正常的很!!! 真是見鬼了…折騰半天我從測試結果合理推測部署的Web App所執行的不是最新版本，我在Stack Overflow也有找到相關討論:</p><ul><li><a href="https://stackoverflow.com/questions/18131157/" target="_blank" rel="noopener">POST to Google Apps Script web app does use latest version</a></li><li><a href="https://stackoverflow.com/questions/49170665/" target="_blank" rel="noopener">App script web change version for each deploy</a></li></ul><p>建立一個Web App再另外建立App Script把相關邏輯寫成library，然後在Web App去呼叫它，這是一種方式，但我覺得以簡單的應用而言太拐彎抹角了。只要修改並善用debug測試，確認沒問題後再部署為一個新版本，如此外部呼叫就不會有上述的舊版本問題。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;若想以Google表單來做一個簡易的daily time tracking，提交一次表單就是一筆數據，但每天的時間總是會適當地分配，如此就得重複填寫並送出表單…這真是一個不聰明的方法，若自己寫個網頁表單，request又被瀏覽器同源政策擋下來…就試著用App Script來解決這件事吧，我也沒寫過呢。
    
    </summary>
    
      <category term="Google" scheme="https://laplacetw.github.io/categories/Google/"/>
    
    
      <category term="google" scheme="https://laplacetw.github.io/tags/google/"/>
    
      <category term="spread sheet" scheme="https://laplacetw.github.io/tags/spread-sheet/"/>
    
  </entry>
  
  <entry>
    <title>個人化NexT主題</title>
    <link href="https://laplacetw.github.io/hexo-next-optimize/"/>
    <id>https://laplacetw.github.io/hexo-next-optimize/</id>
    <published>2019-05-02T16:35:50.000Z</published>
    <updated>2019-08-25T17:22:25.167Z</updated>
    
    <content type="html"><![CDATA[<p>2019/08/25更新。<br><a id="more"></a><br>＊關於在本機伺服器正常運作，但部署後卻沒有生效的情況，單獨執行”hexo d”指令即可，”hexo d -g”之類的組合指令會使某些檔案沒有被推送到遠端伺服器上。</p><hr><h2 id="SEO-Search-Engine-Optimization"><a href="#SEO-Search-Engine-Optimization" class="headerlink" title="SEO(Search Engine Optimization)"></a>SEO(Search Engine Optimization)</h2><p></p><p><br><a href="https://www.google.com/webmasters" target="_blank" rel="noopener">Google Webmaster tools verification</a><br>輸入網址前置字元(部落格網址)，Google提供許多驗證方法，而我選擇的是HTML標記方法，在Hexo根目錄找到/themes/next/layout/_partials/head/head.swig，貼上Google所提供的<meta>標記，部署後按下驗證即可。<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta name=<span class="string">"google-site-verification"</span> content=<span class="string">"&#123;verification code&#125;"</span> /&gt;</span><br></pre></td></tr></table></figure><br><img src="https://i.imgur.com/Z9Kj7x3.png" alt><br><img src="https://i.imgur.com/ZQIQDI3.png" alt></p><h2 id="Font-Awsome-Icon"><a href="#Font-Awsome-Icon" class="headerlink" title="Font Awsome Icon"></a>Font Awsome Icon</h2><p>NexT自帶的版本為v4.7.0，到<a href="https://fontawesome.com/start" target="_blank" rel="noopener">官網</a>找新版本CDN連結，貼在/themes/next/layout/_partials/head/head.swig就能套用更多icon呢。<br><img src="https://i.imgur.com/bC6ng9U.png" alt></p><p>＊引入新版本後部分icon可能會因為class name改變而無法顯示<br><img src="https://i.imgur.com/X0Umdjr.png" alt></p><h3 id="Change-Side-Bar-Icon"><a href="#Change-Side-Bar-Icon" class="headerlink" title="Change Side Bar Icon"></a>Change Side Bar Icon</h3><p>檔案路徑:/themes/next/layout/_macro/sidebar.swig<br>修改social icon相關程式碼為:<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123; <span class="keyword">if</span> theme.social_icons.enable &#125;  <span class="comment">// ％符號會影響Code Block顯示因此在文章這裡移除</span></span><br><span class="line">    &#123; set sidebarIcon = <span class="string">'&lt;i class="'</span> + link.split(<span class="string">'||'</span>)[<span class="number">1</span>] | trim | <span class="keyword">default</span>(<span class="string">'globe'</span>) + <span class="string">'"&gt;&lt;/i&gt;'</span> &#125;</span><br><span class="line">&#123; endif &#125;</span><br></pre></td></tr></table></figure><br>如此在NexT Config就能直接設定Font Awsome的class name:<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">social:</span></span><br><span class="line"><span class="attr">  GitHub:</span> <span class="attr">https://github.com/username</span> <span class="string">||</span> <span class="string">fab</span> <span class="string">fa-github</span> <span class="string">fa-lg</span></span><br><span class="line"><span class="attr">  Linkedin:</span> <span class="attr">https://www.linkedin.com/</span> <span class="string">||</span> <span class="string">fab</span> <span class="string">fa-linkedin-in</span> <span class="string">fa-lg</span></span><br><span class="line"><span class="attr">  Twitter:</span> <span class="attr">https://twitter.com/</span> <span class="string">||</span> <span class="string">fab</span> <span class="string">fa-twitter</span> <span class="string">fa-lg</span></span><br><span class="line"><span class="attr">  E-Mail:</span> <span class="attr">mailto:username@gmail.com</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-envelope</span> <span class="string">fa-lg</span></span><br></pre></td></tr></table></figure><br><img src="https://i.imgur.com/f2Ssx2y.png" alt></p><h3 id="Change-Post-Icon"><a href="#Change-Post-Icon" class="headerlink" title="Change Post Icon"></a>Change Post Icon</h3><p>檔案路徑:themes/next/layout/_macro/post.swig<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;span <span class="class"><span class="keyword">class</span></span>=<span class="string">"post-meta-item-icon"</span>&gt;</span><br><span class="line">    &lt;i <span class="class"><span class="keyword">class</span></span>=<span class="string">"fas fa-calendar-alt"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span></span><br><span class="line">&lt;<span class="regexp">/span&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&lt;span class="post-meta-item-icon"&gt;</span></span><br><span class="line"><span class="regexp">    &lt;i class="fas fa-folder-open"&gt;&lt;/i</span>&gt;</span><br><span class="line">&lt;<span class="regexp">/span&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&lt;span class="post-meta-item-icon"&gt;</span></span><br><span class="line"><span class="regexp">    &lt;i class="fas fa-comment-dots"&gt;&lt;/i</span>&gt;</span><br><span class="line">&lt;<span class="regexp">/span&gt;</span></span><br></pre></td></tr></table></figure></p><h2 id="Background-Style"><a href="#Background-Style" class="headerlink" title="Background Style"></a>Background Style</h2><p>檔案路徑:themes/next/source/css/_custom/custom.styl<br>參考<a href="https://slanceli.top/2019/02/18/深度美化Hexo（NexT主题）/#more" target="_blank" rel="noopener">Slanceli - 深度美化Hexo(NexT主题)</a></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">// Custom styles.</span><br><span class="line">@<span class="keyword">media</span> screen and (min-width:<span class="number">1200px</span>)&#123;</span><br><span class="line">    <span class="selector-tag">body</span>&#123;</span><br><span class="line">        <span class="attribute">background-image</span>:<span class="built_in">url</span>(/images/background.png);</span><br><span class="line">        <span class="attribute">background-repeat</span>: no-repeat;</span><br><span class="line">        <span class="attribute">background-attachment</span>:fixed;</span><br><span class="line">        <span class="attribute">background-position</span>:<span class="number">50%</span> <span class="number">60%</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="selector-id">#footer</span> <span class="selector-tag">a</span>&#123;</span><br><span class="line">        <span class="attribute">color</span>:<span class="number">#eee</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// background</span><br><span class="line"><span class="selector-class">.main-inner</span>&#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">0.9</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// menu</span><br><span class="line"><span class="selector-class">.header-inner</span>&#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#ffffffe8</span>;</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// footer</span><br><span class="line"><span class="selector-class">.footer</span>&#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Block-Style"><a href="#Block-Style" class="headerlink" title="Block Style"></a>Block Style</h2><p>使側邊欄與文章區塊邊角變為圓角</p><p>檔案路徑:themes/next/source/css/_variables/Gemini.styl<br>修改參數如下 :<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$border-radius-inner              = 0 0 16px 16px;</span><br><span class="line">$border-radius                    = 16px;</span><br></pre></td></tr></table></figure></p><p>檔案路徑:themes/next/source/css/_schemes/Gemini/index.styl<br>加入CSS :<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.sidebar</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>:transparent;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><img src="https://i.imgur.com/MpmS7WU.png" alt></p><h2 id="Tag-Cloud"><a href="#Tag-Cloud" class="headerlink" title="Tag Cloud"></a>Tag Cloud</h2><p>雖然NexT有內建標籤雲，因個人喜好故採用<a href="https://github.com/MikeCoder/hexo-tag-cloud" target="_blank" rel="noopener">第三方標籤雲</a>。</p><h2 id="Continue…"><a href="#Continue…" class="headerlink" title="Continue…"></a>Continue…</h2>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;2019/08/25更新。&lt;br&gt;
    
    </summary>
    
      <category term="Hexo" scheme="https://laplacetw.github.io/categories/Hexo/"/>
    
    
      <category term="hexo" scheme="https://laplacetw.github.io/tags/hexo/"/>
    
      <category term="github pages" scheme="https://laplacetw.github.io/tags/github-pages/"/>
    
  </entry>
  
  <entry>
    <title>Python自動填寫Google表單</title>
    <link href="https://laplacetw.github.io/python-auto-fill-out-google-form/"/>
    <id>https://laplacetw.github.io/python-auto-fill-out-google-form/</id>
    <published>2019-04-20T04:18:41.000Z</published>
    <updated>2019-08-23T17:33:26.351Z</updated>
    
    <content type="html"><![CDATA[<p>建個Google表單來測試：現任美國總統究竟是州普？卅普？還是川普？<br><a id="more"></a><br><img src="https://i.imgur.com/th41Uch.png" alt></p><p>打開瀏覽器的開發人員模式，切換到Network Panel並試著送出一次表單，可見formResponse有相當明顯的數據傳輸。<br><img src="https://i.imgur.com/7EDofS9.png" alt></p><p>展開查看詳情，在Header的部分可以找到剛才送出表單的資料結構，確定“entry.1216123536”就是所填寫的表單欄位，那麼可以開始寫程式了。<br><img src="https://i.imgur.com/O02YylJ.png" alt></p><h3 id="url"><a href="#url" class="headerlink" title="url"></a>url</h3><p></p><p><br>在Header摘要可見到url的格式為表單網址加上”/formResponse”，使用縮網址會無法重導向至正確的表單位址。</p><h3 id="data"><a href="#data" class="headerlink" title="data"></a>data</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">payload = &#123;</span><br><span class="line">    <span class="string">'entry.1216123536'</span> : <span class="string">''</span>,</span><br><span class="line">    <span class="string">'fvv'</span> : <span class="string">'0'</span>,</span><br><span class="line">    <span class="string">'draftResponse'</span> : <span class="string">'[]'</span>,</span><br><span class="line">    <span class="string">'pageHistory'</span> : <span class="string">'0'</span>,</span><br><span class="line">    <span class="string">'fbzx'</span> : <span class="string">'9150375950543103543'</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="code"><a href="#code" class="headerlink" title="code"></a>code</h3><p></p><p><br>為了讓程式的行為看起來不那麼程式(?)，設置隨機填寫欄位值與隨機延遲時間。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> requests <span class="keyword">as</span> rq</span><br><span class="line"></span><br><span class="line">url = <span class="string">'https://docs.google.com/forms/d/e/********************/formResponse'</span></span><br><span class="line">params = [<span class="string">'州普'</span>, <span class="string">'卅普'</span>, <span class="string">'川普'</span>]</span><br><span class="line">payload = &#123;</span><br><span class="line">    <span class="string">'entry.1216123536'</span> : <span class="string">''</span>,</span><br><span class="line">    <span class="string">'fvv'</span> : <span class="string">'0'</span>,</span><br><span class="line">    <span class="string">'draftResponse'</span> : <span class="string">'[]'</span>,</span><br><span class="line">    <span class="string">'pageHistory'</span> : <span class="string">'0'</span>,</span><br><span class="line">    <span class="string">'fbzx'</span> : <span class="string">'9150375950543103543'</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">num = <span class="number">10</span>  <span class="comment"># number of executions</span></span><br><span class="line">period = np.arange(<span class="number">0.5</span>, <span class="number">5.0</span>, <span class="number">0.1</span>)</span><br><span class="line">delay = <span class="number">0</span>  <span class="comment"># delay of execution</span></span><br><span class="line"><span class="keyword">while</span> num &gt; <span class="number">0</span>:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        payload[<span class="string">'entry.1216123536'</span>] = random.choice(params)  <span class="comment"># random choice</span></span><br><span class="line">        res = rq.post(url, data=payload)</span><br><span class="line">        res.raise_for_status()</span><br><span class="line">        <span class="keyword">if</span> res.status_code == <span class="number">200</span> :</span><br><span class="line">            delay = round(random.choice(period), <span class="number">2</span>)  <span class="comment"># round off to the 2nd decimal place</span></span><br><span class="line">            print(<span class="string">'Fill Out : '</span> + payload[<span class="string">'entry.1216123536'</span>] + <span class="string">' delay : '</span> + str(delay) + <span class="string">' sec'</span>)</span><br><span class="line">            time.sleep(delay)</span><br><span class="line">    <span class="keyword">except</span> rq.HTTPError:</span><br><span class="line">        print(<span class="string">'HTTP Error!'</span>)</span><br><span class="line">    </span><br><span class="line">    num -= <span class="number">1</span></span><br></pre></td></tr></table></figure></p><p><img src="https://i.imgur.com/jKfaOP4.png" alt></p><p>↓ 嗯，只有兩個人答對呢(?)<br><img src="https://i.imgur.com/zodJ6IR.png" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;建個Google表單來測試：現任美國總統究竟是州普？卅普？還是川普？&lt;br&gt;
    
    </summary>
    
      <category term="Python" scheme="https://laplacetw.github.io/categories/Python/"/>
    
    
      <category term="python" scheme="https://laplacetw.github.io/tags/python/"/>
    
      <category term="google form" scheme="https://laplacetw.github.io/tags/google-form/"/>
    
  </entry>
  
  <entry>
    <title>Hexo on GitHub Pages:Icarus主題</title>
    <link href="https://laplacetw.github.io/hexo-theme-icarus/"/>
    <id>https://laplacetw.github.io/hexo-theme-icarus/</id>
    <published>2019-04-11T16:42:21.000Z</published>
    <updated>2019-05-01T16:55:43.998Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://theme-next.iissnan.com&quot;" target="_blank" rel="noopener">NexT</a>主題實在是太多人用了，看得有點膩，最近看到Icarus主題覺得很Blog(?)，決定來換個主題。<br><a id="more"></a></p><h2 id="Download"><a href="#Download" class="headerlink" title="Download"></a>Download</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd blog</span><br><span class="line">git clone https://github.com/ppoffice/hexo-theme-icarus.git themes/icarus</span><br><span class="line">hexo s  # run on local host</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/KaGH5Gm.png" alt></p><hr><h2 id="Config"><a href="#Config" class="headerlink" title="Config"></a>Config</h2><p></p><p><br>參考<a href="https://blog.zhangruipeng.me/hexo-theme-icarus/categories/" target="_blank" rel="noopener">官方文件</a>，主要配置：</p><h3 id="Favicon-amp-Logo"><a href="#Favicon-amp-Logo" class="headerlink" title="Favicon &amp; Logo"></a>Favicon &amp; Logo</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Version of the Icarus theme that is currently used</span></span><br><span class="line"><span class="attr">version:</span> <span class="number">2.3</span><span class="number">.0</span></span><br><span class="line"><span class="comment"># Path or URL to the website's icon</span></span><br><span class="line"><span class="attr">favicon:</span> <span class="string">/images/favicon.svg</span></span><br><span class="line"><span class="comment"># Path or URL to RSS atom.xml</span></span><br><span class="line"><span class="attr">rss:</span> </span><br><span class="line"><span class="comment"># Path or URL to the website's logo to be shown on the left of the navigation bar or footer</span></span><br><span class="line"><span class="attr">logo:</span> <span class="string">/images/logo.svg</span></span><br></pre></td></tr></table></figure><p>＊ 推薦兩個SVG線上製作工具：<a href="https://www.vectorizer.io" target="_blank" rel="noopener">Image Vectorizer</a>、<a href="http://vectorpaint.yaks.co.nz" target="_blank" rel="noopener">SVG Editor</a></p><h3 id="Navbar-amp-Footer"><a href="#Navbar-amp-Footer" class="headerlink" title="Navbar &amp; Footer"></a>Navbar &amp; Footer</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Navigation bar link settings</span></span><br><span class="line"><span class="attr">navbar:</span></span><br><span class="line">    <span class="comment"># Navigation bar menu links</span></span><br><span class="line"><span class="attr">    menu:</span></span><br><span class="line"><span class="attr">        Home:</span> <span class="string">/</span></span><br><span class="line"><span class="attr">        Archives:</span> <span class="string">/archives</span></span><br><span class="line"><span class="attr">        Categories:</span> <span class="string">/categories</span></span><br><span class="line"><span class="attr">        Tags:</span> <span class="string">/tags</span></span><br><span class="line">        <span class="comment"># About: /about</span></span><br><span class="line">    <span class="comment"># Navigation bar links to be shown on the right</span></span><br><span class="line"><span class="attr">    links:</span></span><br><span class="line"><span class="attr">        GitHub_LaplaceTW:</span></span><br><span class="line"><span class="attr">            icon:</span> <span class="string">fab</span> <span class="string">fa-github</span></span><br><span class="line"><span class="attr">            url:</span> <span class="string">'https://github.com/laplacetw'</span></span><br><span class="line"><span class="comment"># Footer section link settings</span></span><br><span class="line"><span class="attr">footer:</span></span><br><span class="line">    <span class="comment"># Links to be shown on the right of the footer section</span></span><br><span class="line"><span class="attr">    links:</span></span><br><span class="line">        <span class="string">CC</span> <span class="string">BY</span> <span class="number">4.0</span><span class="string">:</span></span><br><span class="line"><span class="attr">            icon:</span> <span class="string">fab</span> <span class="string">fa-creative-commons</span></span><br><span class="line"><span class="attr">            url:</span> <span class="string">'https://creativecommons.org/licenses/by/4.0/'</span></span><br></pre></td></tr></table></figure><h3 id="Comment"><a href="#Comment" class="headerlink" title="Comment"></a>Comment</h3><p></p><p><br>評論系統使用DISQUS服務<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">comment:</span></span><br><span class="line">    <span class="comment"># Name of the comment plugin</span></span><br><span class="line"><span class="attr">    type:</span> <span class="string">disqus</span></span><br><span class="line"><span class="attr">    enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">    shortname:</span> <span class="string">&#123;disqus</span> <span class="string">shortname&#125;</span></span><br><span class="line"><span class="attr">    count:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">    lazyload:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure></p><h3 id="Wiget"><a href="#Wiget" class="headerlink" title="Wiget"></a>Wiget</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">widgets:</span></span><br><span class="line"><span class="bullet">    -</span></span><br><span class="line">        <span class="comment"># Widget name</span></span><br><span class="line"><span class="attr">        type:</span> <span class="string">profile</span></span><br><span class="line">        <span class="comment"># Where should the widget be placed, left or right</span></span><br><span class="line"><span class="attr">        position:</span> <span class="string">left</span></span><br><span class="line">        <span class="comment"># Author name to be shown in the profile widget</span></span><br><span class="line"><span class="attr">        author:</span> <span class="string">LaplaceTW</span></span><br><span class="line">        <span class="comment"># Title of the author to be shown in the profile widget</span></span><br><span class="line"><span class="attr">        author_title:</span> <span class="string">learning</span> <span class="string">by</span> <span class="string">doing</span></span><br><span class="line">        <span class="comment"># Author's current location to be shown in the profile widget</span></span><br><span class="line"><span class="attr">        location:</span> <span class="string">Taiwan,</span> <span class="string">Earth</span></span><br><span class="line">        <span class="comment"># Path or URL to the avatar to be shown in the profile widget</span></span><br><span class="line"><span class="attr">        avatar:</span> </span><br><span class="line">        <span class="comment"># Email address for the Gravatar to be shown in the profile widget</span></span><br><span class="line"><span class="attr">        gravatar:</span> </span><br><span class="line">        <span class="comment"># Whether to show avatar image rounded or square</span></span><br><span class="line"><span class="attr">        avatar_rounded:</span> <span class="literal">false</span></span><br><span class="line">        <span class="comment"># Path or URL for the follow button</span></span><br><span class="line"><span class="attr">        follow_link:</span> <span class="string">'https://github.com/laplacetw'</span></span><br><span class="line">        <span class="comment"># Links to be shown on the bottom of the profile widget</span></span><br><span class="line"><span class="attr">        social_links:</span></span><br><span class="line"><span class="attr">            Email:</span></span><br><span class="line"><span class="attr">                icon:</span> <span class="string">far</span> <span class="string">fa-envelope</span></span><br><span class="line"><span class="attr">                url:</span> <span class="string">''</span></span><br><span class="line"><span class="attr">            Github:</span></span><br><span class="line"><span class="attr">                icon:</span> <span class="string">fab</span> <span class="string">fa-github</span></span><br><span class="line"><span class="attr">                url:</span> <span class="string">''</span></span><br><span class="line"><span class="attr">            Linkedin:</span></span><br><span class="line"><span class="attr">                icon:</span> <span class="string">fab</span> <span class="string">fa-linkedin</span></span><br><span class="line"><span class="attr">                url:</span> <span class="string">''</span></span><br><span class="line"><span class="attr">            RSS:</span></span><br><span class="line"><span class="attr">                icon:</span> <span class="string">fas</span> <span class="string">fa-rss</span></span><br><span class="line"><span class="attr">                url:</span> <span class="string">/atom.xml</span></span><br><span class="line"><span class="bullet">    -</span></span><br><span class="line">        <span class="comment"># Widget name (文章內容目錄)</span></span><br><span class="line"><span class="attr">        type:</span> <span class="string">toc</span></span><br><span class="line">        <span class="comment"># Where should the widget be placed, left or right</span></span><br><span class="line"><span class="attr">        position:</span> <span class="string">right</span></span><br><span class="line"><span class="bullet">    -</span></span><br><span class="line">        <span class="comment"># Widget name (友情連結)</span></span><br><span class="line"><span class="attr">        type:</span> <span class="string">links</span></span><br><span class="line">        <span class="comment"># Where should the widget be placed, left or right</span></span><br><span class="line"><span class="attr">        position:</span> <span class="string">left</span></span><br><span class="line">        <span class="comment"># Links to be shown in the links widget</span></span><br><span class="line"><span class="attr">        links:</span></span><br><span class="line"><span class="attr">            Hexo:</span> <span class="string">'https://hexo.io'</span></span><br><span class="line"><span class="bullet">    -</span></span><br><span class="line">        <span class="comment"># Widget name (全站分類)</span></span><br><span class="line"><span class="attr">        type:</span> <span class="string">category</span></span><br><span class="line">        <span class="comment"># Where should the widget be placed, left or right</span></span><br><span class="line"><span class="attr">        position:</span> <span class="string">left</span></span><br><span class="line"><span class="bullet">    -</span></span><br><span class="line">        <span class="comment"># Widget name (最新文章)</span></span><br><span class="line"><span class="attr">        type:</span> <span class="string">recent_posts</span></span><br><span class="line">        <span class="comment"># Where should the widget be placed, left or right</span></span><br><span class="line"><span class="attr">        position:</span> <span class="string">right</span></span><br><span class="line"><span class="bullet">    -</span></span><br><span class="line">        <span class="comment"># Widget name (時間軸)</span></span><br><span class="line"><span class="attr">        type:</span> <span class="string">archive</span></span><br><span class="line">        <span class="comment"># Where should the widget be placed, left or right</span></span><br><span class="line"><span class="attr">        position:</span> <span class="string">right</span></span><br><span class="line"><span class="bullet">    -</span></span><br><span class="line">        <span class="comment"># Widget name (標籤雲)</span></span><br><span class="line"><span class="attr">        type:</span> <span class="string">tagcloud</span></span><br><span class="line">        <span class="comment"># Where should the widget be placed, left or right</span></span><br><span class="line"><span class="attr">        position:</span> <span class="string">right</span></span><br></pre></td></tr></table></figure><p>＊ hyphen 為每個 Wiget 的起始，多一個少一個都會導致Error</p><h3 id="Plugins"><a href="#Plugins" class="headerlink" title="Plugins"></a>Plugins</h3><p></p><p><br>啟用不蒜子網站流量統計設定(預設為關閉)<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">plugins:</span></span><br><span class="line">    <span class="comment"># BuSuanZi site/page view counter</span></span><br><span class="line">    <span class="comment"># https://busuanzi.ibruce.info</span></span><br><span class="line"><span class="attr">    busuanzi:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure></p><hr><p><img src="https://i.imgur.com/DXsTbdB.png" alt><br><img src="https://i.imgur.com/9t5QT9J.png" alt><br>更進一步個人化ICARUS主題的部分，例如調整文章版面配置、文末版權宣告等，網路教學的版本似乎都有點舊了，自己也是搞了很久…我懶得寫了，因為代碼高亮的問題一直無法順利解決，浪費太多時間了。一番折騰後我又換回NEXT…</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://theme-next.iissnan.com&amp;quot;&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;NexT&lt;/a&gt;主題實在是太多人用了，看得有點膩，最近看到Icarus主題覺得很Blog(?)，決定來換個主題。&lt;br&gt;
    
    </summary>
    
      <category term="Hexo" scheme="https://laplacetw.github.io/categories/Hexo/"/>
    
    
      <category term="hexo" scheme="https://laplacetw.github.io/tags/hexo/"/>
    
      <category term="github pages" scheme="https://laplacetw.github.io/tags/github-pages/"/>
    
  </entry>
  
  <entry>
    <title>Hexo on GitHub Pages:不蒜子統計失效</title>
    <link href="https://laplacetw.github.io/hexo-error-busuanzi/"/>
    <id>https://laplacetw.github.io/hexo-error-busuanzi/</id>
    <published>2018-10-12T17:06:22.000Z</published>
    <updated>2019-05-01T08:39:14.847Z</updated>
    
    <content type="html"><![CDATA[<p>今天PO文後發現…所以我說那個文章閱讀次數呢?頁面底部的流量統計也消失了。<br><a id="more"></a><br>推測是.js檔出了什麼問題，先到<a href="https://busuanzi.ibruce.info" target="_blank" rel="noopener">不蒜子</a>的頁面瞧瞧，發現一行小小的紅字，寫著「因七牛強制過期『dn-lbstatics.qbox.me』域名，與客服溝通無果，只能更換域名到『busuanzi.ibruce.info』!」，雖然不知道七牛到底是什麼牛，但可以確定問題來源是域名更換。</p><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><p></p><p><br>在NexT資料夾中找到不蒜子的設定檔，路徑為layout/_third-party/analytics/busuanzi-counter.swig<br><img src="https://i.imgur.com/rpVQnFj.png" alt></p><p>修改.js路徑為:<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">async</span> <span class="attr">src</span>=<span class="string">"https://busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>重新deploy後便會發現統計數字又回來啦。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天PO文後發現…所以我說那個文章閱讀次數呢?頁面底部的流量統計也消失了。&lt;br&gt;
    
    </summary>
    
      <category term="Hexo" scheme="https://laplacetw.github.io/categories/Hexo/"/>
    
    
      <category term="hexo" scheme="https://laplacetw.github.io/tags/hexo/"/>
    
      <category term="github pages" scheme="https://laplacetw.github.io/tags/github-pages/"/>
    
  </entry>
  
  <entry>
    <title>Excel:公式、圖表與樞紐分析</title>
    <link href="https://laplacetw.github.io/excel-func-chart-pivot-table/"/>
    <id>https://laplacetw.github.io/excel-func-chart-pivot-table/</id>
    <published>2018-10-12T01:22:04.000Z</published>
    <updated>2019-04-29T15:15:52.026Z</updated>
    
    <content type="html"><![CDATA[<p>常用公式、圖表與樞紐分析之基本操作。<br><a id="more"></a></p><h1 id="常用公式"><a href="#常用公式" class="headerlink" title="常用公式"></a>常用公式</h1><p><br></p><h2 id="IF"><a href="#IF" class="headerlink" title="IF"></a>IF</h2><ul><li>用法:IF(條件,符合條件,不符合條件)</li><li>範例:判斷訂單金額是否大於70(億)<br><img src="https://i.imgur.com/wQeP7th.png" alt></li></ul><h2 id="多重條件判斷"><a href="#多重條件判斷" class="headerlink" title="多重條件判斷"></a>多重條件判斷</h2><ul><li>用法:IF(條件,IF(…),不符合條件)</li><li>範例:呈上例，進一步做訂單金額分級<br><img src="https://i.imgur.com/27kZEy2.png" alt></li></ul><h2 id="SUM"><a href="#SUM" class="headerlink" title="SUM"></a>SUM</h2><ul><li>用法:SUM(範圍1,範圍2…)</li><li>範例:計算化學品與塑膠/橡膠年度訂單金額加總<br><img src="https://i.imgur.com/krLlYE2.png" alt></li></ul><h2 id="MAX"><a href="#MAX" class="headerlink" title="MAX"></a>MAX</h2><ul><li>用法:MAX(範圍1,範圍2…)</li><li>範例:找出各類別每月訂單金額中最高者<br><img src="https://i.imgur.com/uDmIaxx.png" alt></li></ul><h2 id="INT-ROUND"><a href="#INT-ROUND" class="headerlink" title="INT/ROUND"></a>INT/ROUND</h2><ul><li>用法:INT(儲存格)/ROUND(儲存格,小數位數)</li><li>範例:INT無條件捨去/ROUND四捨五入<br><img src="https://i.imgur.com/sZLMI11.png" alt></li></ul><h2 id="AVERAGE"><a href="#AVERAGE" class="headerlink" title="AVERAGE"></a>AVERAGE</h2><ul><li>用法:AVERAGE(範圍1,範圍2…)</li><li>範例:計算年度平均值之無條件捨去與四捨五入<br><img src="https://i.imgur.com/F8FyAzn.png" alt></li></ul><h2 id="SUMIF"><a href="#SUMIF" class="headerlink" title="SUMIF"></a>SUMIF</h2><ul><li>用法:SUMIF(條件範圍,條件,合計範圍)</li><li>範例:計算各種商品之銷售總額<br><img src="https://i.imgur.com/xz1FZ5Z.png" alt></li></ul><h2 id="COUNTIF"><a href="#COUNTIF" class="headerlink" title="COUNTIF"></a>COUNTIF</h2><ul><li>用法:COUNTIF(條件範圍,條件)</li><li>範例:統計年度化學品訂單金額分級<br><img src="https://i.imgur.com/V7LXB0g.png" alt></li></ul><h2 id="VLOOKUP"><a href="#VLOOKUP" class="headerlink" title="VLOOKUP"></a>VLOOKUP</h2><ul><li>用法:VLOOKUP(搜尋條件,範圍,目標欄位,精確度)</li><li>範例:搜尋指定月份訂單金額<br><img src="https://i.imgur.com/sa39mn2.png" alt></li></ul><h2 id="多條件搜尋"><a href="#多條件搜尋" class="headerlink" title="多條件搜尋"></a>多條件搜尋</h2><ul><li>用法:LOOKUP(1,0/((條件1)<em>(條件2)</em>…),目標範圍)</li><li>範例:尋找訂單金額分級為Ａ級且大於100(億)之月份<br><img src="https://i.imgur.com/kJxlPKI.png" alt></li></ul><h2 id="重點整理"><a href="#重點整理" class="headerlink" title="重點整理"></a>重點整理</h2><table><thead><tr><th style="text-align:center">公式</th><th style="text-align:center">說明  </th></tr></thead><tbody><tr><td style="text-align:center">IF</td><td style="text-align:center">條件式</td></tr><tr><td style="text-align:center">SUM</td><td style="text-align:center">加總</td></tr><tr><td style="text-align:center">MAX</td><td style="text-align:center">最大值</td></tr><tr><td style="text-align:center">INT</td><td style="text-align:center">無條件捨去</td></tr><tr><td style="text-align:center">ROUND</td><td style="text-align:center">四捨五入</td></tr><tr><td style="text-align:center">AVERAGE</td><td style="text-align:center">平均值</td></tr><tr><td style="text-align:center">SUMIF</td><td style="text-align:center">有條件加總</td></tr><tr><td style="text-align:center">COUNTIF</td><td style="text-align:center">有條件統計</td></tr><tr><td style="text-align:center">VLOOKUP</td><td style="text-align:center">尋找      </td></tr></tbody></table><hr><h1 id="常用圖表"><a href="#常用圖表" class="headerlink" title="常用圖表"></a>常用圖表</h1><p><br></p><h2 id="錯誤範例"><a href="#錯誤範例" class="headerlink" title="錯誤範例"></a>錯誤範例</h2><p>說明:折線圖所表達的為<span style="color:red;">趨勢、變化</span>，而下圖中水平軸項目為類別，離散型數據不具連續性，這樣的圖表<strong>不具任何意義</strong>，應使用直條圖比較各項目之大小，或使用圓形圖呈現各項目佔整體之比重。<br><img src="https://i.imgur.com/UswDs8J.png" alt></p><h2 id="基本設定"><a href="#基本設定" class="headerlink" title="基本設定"></a>基本設定</h2><ul><li>圖表設計與格式設定在圖表工具的頁籤中</li><li>圖表項目細部設定在圖表右側的”＋”號中<br><img src="https://i.imgur.com/67Z3T4H.png" alt></li></ul><h2 id="直條圖"><a href="#直條圖" class="headerlink" title="直條圖"></a>直條圖</h2><ul><li>使用時機:做<span style="color:red;">比較</span>，呈現數據的「相對大小」</li><li>範例:100年度化學品外銷月訂單金額比較<br><img src="https://i.imgur.com/sHPqEjn.png" alt></li></ul><h2 id="堆疊直條圖"><a href="#堆疊直條圖" class="headerlink" title="堆疊直條圖"></a>堆疊直條圖</h2><ul><li>範例說明:呈現整體營業額與個別業務人員表現，可明顯看出業務A(藍色區塊)與業務C(灰色區塊)的成長與衰退，以及對整體的影響。<br><img src="https://i.imgur.com/UcZuOEu.png" alt></li></ul><h2 id="折線圖"><a href="#折線圖" class="headerlink" title="折線圖"></a>折線圖</h2><ul><li>使用時機:讀<span style="color:red;">趨勢</span>，呈現數據的「變化、走勢」</li><li>範例:100年度化學品外銷月訂單金額走勢<br><img src="https://i.imgur.com/FATm3bE.png" alt></li></ul><h2 id="圓形圖"><a href="#圓形圖" class="headerlink" title="圓形圖"></a>圓形圖</h2><ul><li>使用時機:看<span style="color:red;">比例</span>，呈現數據的「相對比例」</li><li>範例:100年度外銷訂單項目比重<br><img src="https://i.imgur.com/TBfdio3.png" alt></li></ul><h2 id="重點整理-1"><a href="#重點整理-1" class="headerlink" title="重點整理"></a>重點整理</h2><p>數據視覺化須依據所欲呈現之數據統計摘要，進而選擇適當的圖表形式，避免<span style="color:red;">誤用圖表、為分析而分析</span>。</p><ul><li>直條圖:做<span style="color:red;">比較</span></li><li>折線圖:讀<span style="color:red;">趨勢</span></li><li>圓形圖:看<span style="color:red;">比例</span></li></ul><hr><h1 id="樞紐分析"><a href="#樞紐分析" class="headerlink" title="樞紐分析"></a>樞紐分析</h1><p>以經濟部101-106年外銷美國訂單統計資料為例。</p><h2 id="Step-1-選取數據範圍"><a href="#Step-1-選取數據範圍" class="headerlink" title="Step 1:選取數據範圍"></a>Step 1:選取數據範圍</h2><p><strong>數據範圍中不允許空白欄位</strong></p><p><img src="https://i.imgur.com/joDfNB9.png" alt></p><h2 id="欄位說明"><a href="#欄位說明" class="headerlink" title="欄位說明"></a>欄位說明</h2><ul><li>篩選:報表之篩選條件</li><li>欄  :樞紐分析表<span style="color:red;">行</span>數據</li><li>列  :樞紐分析表<span style="color:red;">列</span>數據</li><li>值  :欲統計之數據，例如加總、平均值</li></ul><p><img src="https://i.imgur.com/UH01LrN.png" alt></p><h2 id="Step-2-拖曳調整欄位與排列順序"><a href="#Step-2-拖曳調整欄位與排列順序" class="headerlink" title="Step 2:拖曳調整欄位與排列順序"></a>Step 2:拖曳調整欄位與排列順序</h2><p><img src="https://i.imgur.com/E8Alrt1.png" alt><br>↓點選值欄位設定可選擇其他計算類型<br><img src="https://i.imgur.com/tEI1LCA.png" alt></p><h2 id="Step-3-插入樞紐分析圖"><a href="#Step-3-插入樞紐分析圖" class="headerlink" title="Step 3:插入樞紐分析圖"></a>Step 3:插入樞紐分析圖</h2><p>樞紐分析工具(頁籤) –&gt; 分析 –&gt; 樞紐分析圖</p><p><img src="https://i.imgur.com/2bgZqAX.png" alt></p><h2 id="樞紐分析-堆疊直條圖"><a href="#樞紐分析-堆疊直條圖" class="headerlink" title="樞紐分析-堆疊直條圖"></a>樞紐分析-堆疊直條圖</h2><p><img src="https://i.imgur.com/UGRPdUl.png" alt></p><h2 id="樞紐分析-圓形圖"><a href="#樞紐分析-圓形圖" class="headerlink" title="樞紐分析-圓形圖"></a>樞紐分析-圓形圖</h2><p><strong>注意圖表的行列數據呈現是否合適</strong></p><p><img src="https://i.imgur.com/B5bdN0S.png" alt><br>↓調整行列數據<br><img src="https://i.imgur.com/0WAn7Aa.png" alt><br>↓調整後<br><img src="https://i.imgur.com/itrWKwo.png" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;常用公式、圖表與樞紐分析之基本操作。&lt;br&gt;
    
    </summary>
    
      <category term="Excel" scheme="https://laplacetw.github.io/categories/Excel/"/>
    
    
      <category term="excel" scheme="https://laplacetw.github.io/tags/excel/"/>
    
      <category term="pivot table" scheme="https://laplacetw.github.io/tags/pivot-table/"/>
    
  </entry>
  
  <entry>
    <title>Django2.0筆記(3):軟體架構</title>
    <link href="https://laplacetw.github.io/django-software-architecture/"/>
    <id>https://laplacetw.github.io/django-software-architecture/</id>
    <published>2018-09-24T16:32:58.000Z</published>
    <updated>2019-08-21T08:41:33.091Z</updated>
    
    <content type="html"><![CDATA[<p>模型、視圖與模板。<br><a id="more"></a></p><h2 id="Model–View–Controller"><a href="#Model–View–Controller" class="headerlink" title="Model–View–Controller"></a>Model–View–Controller</h2><ul><li>Model: 資料庫存取</li><li>View:  使用者介面</li><li>Controller: 控制整合</li></ul><p>說到網頁開發，就不得不提一下MVC架構，維基百科如是說：MVC為軟體工程中的一種軟體架構，將軟體系統分為三個部分：模型(Model)、視圖(View)和控制器(Controller)，目的是為了實現一種<span style="color:red;">動態</span>的程式設計，使後續對程式的修改及擴充簡化，並且使程式某一部分的重複利用成為可能。</p><p>MVC是一種<span style="color:red;">設計理念</span>而非技術，旨在提高開發項目的可擴展性及可維護性，而這樣一個從實際開發所歸納出來的抽象概念，事實上其定義是相當模糊的，尤其是在經過了多年發展後…在Django筆記就不多做探討了。</p><h2 id="Model-Template-View"><a href="#Model-Template-View" class="headerlink" title="Model-Template-View"></a>Model-Template-View</h2><ul><li>Model: 資料庫存取</li><li>Template: 使用者介面</li><li>View:  控制整合</li></ul><p>Django雖然看似獨樹一格自定義了MTV架構，但MTV和MVC的概念是相同的，我嘗試畫了架構對照圖：<br><img src="https://i.imgur.com/vAeWv7K.png" alt><br>以較為白話的方式來描述MTV架構，就是依開發需求去定義Model在資料庫中生成對應的Table，透過View所定義的程式邏輯去整合、控制數據，再交由負責前端的Template呈現給使用者，而使用者亦是透過Template和後端數據做互動。</p><p>我認為Django初學者只是抽象地討論MTV是無法很好地理解其互動關係的，還是喜歡learning by doing。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;模型、視圖與模板。&lt;br&gt;
    
    </summary>
    
      <category term="Django" scheme="https://laplacetw.github.io/categories/Django/"/>
    
    
      <category term="python" scheme="https://laplacetw.github.io/tags/python/"/>
    
      <category term="django" scheme="https://laplacetw.github.io/tags/django/"/>
    
      <category term="web" scheme="https://laplacetw.github.io/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>Django2.0筆記(2):專案設定與應用程式</title>
    <link href="https://laplacetw.github.io/django-app-and-settings/"/>
    <id>https://laplacetw.github.io/django-app-and-settings/</id>
    <published>2018-09-21T16:55:08.000Z</published>
    <updated>2019-08-09T16:06:49.976Z</updated>
    
    <content type="html"><![CDATA[<p>專案下的環境設定、如何建立Django App。<br><a id="more"></a></p><h2 id="Settings-py"><a href="#Settings-py" class="headerlink" title="Settings.py"></a>Settings.py</h2><p>在Windows terminal透過tree指令可查看專案結構<br><img src="https://i.imgur.com/19G7Lvu.jpg" alt><br>Mac環境下要使用tree指令則需另外安裝package :<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install tree</span><br></pre></td></tr></table></figure><br>從專案結構可以發現，根目錄下有個和專案名稱相同的資料夾，其中主要有3個檔案:</p><ul><li>settings.py : 專案設定檔</li><li>url.py      : 網頁路徑設定</li><li>wsgi.py     : 伺服器閘道介面設定</li></ul><p>＊ manage.py為負責專案管理的Python指令檔<br>＊ 什麼是WSGI(Web Server Gateway Interface)? 簡而言之，WSGI就是Server與Web App之間的溝通介面</p><p>開啟settings.py，可以看到官方註解寫得挺詳細的，主要設定：</p><ul><li><p>除錯模式設定為True表示網頁拋出Error會直接顯示錯誤訊息，正式發佈網站前務必記得關閉，以免網站弱點就這麼公開了(汗)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> SECURITY WARNING: don<span class="string">'t run with debug turned on in production!</span></span></span><br><span class="line">DEBUG = True</span><br></pre></td></tr></table></figure></li><li><p>新建立的App必須在這裡被定義</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Application definition</span></span><br><span class="line">INSTALLED_APPS = [</span><br><span class="line">    <span class="string">'django.contrib.admin'</span>,</span><br><span class="line">    <span class="string">'django.contrib.auth'</span>,</span><br><span class="line">    <span class="string">'django.contrib.contenttypes'</span>,</span><br><span class="line">    <span class="string">'django.contrib.sessions'</span>,</span><br><span class="line">    <span class="string">'django.contrib.messages'</span>,</span><br><span class="line">    <span class="string">'django.contrib.staticfiles'</span>,</span><br><span class="line">    ‘&#123;app_name&#125;’,</span><br><span class="line">]</span><br></pre></td></tr></table></figure></li><li><p>網頁模版路徑</p></li></ul><p>在專案目錄下建立templates資料夾:<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">md templates  # build folder for web templates</span><br></pre></td></tr></table></figure><br>＊ Mac terminal建立資料夾指令和Linux同為mkdir</p><p>接著在settings.py中設定路徑，於TEMPLATES中的’DIRS’加入：<br><span cstyle="color:red;">os.path.join(BASE_DIR, ‘templates’)</span><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">TEMPLATES = [</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">'BACKEND'</span>: <span class="string">'django.template.backends.django.DjangoTemplates'</span>,</span><br><span class="line">        <span class="string">'DIRS'</span>: [os.path.join(BASE_DIR, <span class="string">'templates'</span>)],</span><br><span class="line">        <span class="string">'APP_DIRS'</span>: <span class="keyword">True</span>,</span><br><span class="line">        <span class="string">'OPTIONS'</span>: &#123;</span><br><span class="line">            <span class="string">'context_processors'</span>: [</span><br><span class="line">                <span class="string">'django.template.context_processors.debug'</span>,</span><br><span class="line">                <span class="string">'django.template.context_processors.request'</span>,</span><br><span class="line">                <span class="string">'django.contrib.auth.context_processors.auth'</span>,</span><br><span class="line">                <span class="string">'django.contrib.messages.context_processors.messages'</span>,</span><br><span class="line">            ],</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">]</span><br></pre></td></tr></table></figure></p><ul><li><p>語系、時區:修改為繁體中文、台灣時區</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">LANGUAGE_CODE = <span class="string">'zh-Hant'</span></span><br><span class="line"></span><br><span class="line">TIME_ZONE = <span class="string">'Asia/Taipei'</span></span><br></pre></td></tr></table></figure></li><li><p>靜態文件路徑</p></li></ul><p>在專案目錄下建立static資料夾:<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">md static  # build folder for static files(e.g. css, images...)</span><br></pre></td></tr></table></figure><br>接著在settings.py中設定路徑，於”STATIC_URL”後面加上:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">STATICFILES_DIRS = [</span><br><span class="line">    os.path.join(BASE_DIR, <span class="string">'static'</span>),</span><br><span class="line">]</span><br></pre></td></tr></table></figure></p><hr><h2 id="Django-App"><a href="#Django-App" class="headerlink" title="Django App"></a>Django App</h2><p>建立應用程式，專案底下可建立多個App，而每個App都可以視為Package<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> start virtual environment first</span></span><br><span class="line">cd &#123;project_name&#125;</span><br><span class="line">python manage.py startapp &#123;app_name&#125;  # build application</span><br><span class="line"></span><br><span class="line">python manage.py makemigrations &#123;app_name(optional)&#125;  # build data migration for database</span><br><span class="line">python manage.py migrate &#123;app_name(optional)&#125;  # data synchronization</span><br></pre></td></tr></table></figure></p><p>＊ makemigrations與migrate為資料庫同步設定，預設為對所有應用程式同步，因此應用程式名稱為選填</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;專案下的環境設定、如何建立Django App。&lt;br&gt;
    
    </summary>
    
      <category term="Django" scheme="https://laplacetw.github.io/categories/Django/"/>
    
    
      <category term="python" scheme="https://laplacetw.github.io/tags/python/"/>
    
      <category term="django" scheme="https://laplacetw.github.io/tags/django/"/>
    
      <category term="web" scheme="https://laplacetw.github.io/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>Django2.0筆記(1):初始化設定</title>
    <link href="https://laplacetw.github.io/django-start/"/>
    <id>https://laplacetw.github.io/django-start/</id>
    <published>2018-09-19T15:55:31.000Z</published>
    <updated>2019-08-21T08:39:19.979Z</updated>
    
    <content type="html"><![CDATA[<p>近期耗費大量心力在學習Django，因為Google搜尋到的教學文多數版本停留在Django 1.x，對初學者來說略過太多細節。<a id="more"></a>作為WEB初學者，Django有許多概念並不是很直觀，必須實際測試來幫助自己理解。目前所使用的版本為Django 2.1，於是我踩了相當、相當多的坑，感謝無數撰寫教學文的高手前輩讓自己學習了很多。在各種線索的拼湊之下、終於讓Django Project在Apache Server順利運作了(汗)。</p><h1 id="Django-Virtual-Environment-amp-New-Project"><a href="#Django-Virtual-Environment-amp-New-Project" class="headerlink" title="Django:Virtual Environment &amp; New Project"></a>Django:Virtual Environment &amp; New Project</h1><p>雖然網路上有許多教學文，但最詳細也最可靠的還是官方文件：<a href="https://docs.djangoproject.com/en/2.1/" target="_blank" rel="noopener">Django2.1 Doc</a>。</p><h2 id="Virtual-Environment-for-Django"><a href="#Virtual-Environment-for-Django" class="headerlink" title="Virtual Environment for Django"></a>Virtual Environment for Django</h2><p>開發Django Project建議另建一個乾淨的虛擬環境，只安裝專案所需套件，Python環境建置就不贅述，從安裝及建立虛擬環境開始:<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">pip install virtualenv  # install virtual environment package</span><br><span class="line">cd c:\</span><br><span class="line">virtualenv &#123;virtualenv_name&#125;  # build virtual environment for Django</span><br><span class="line"></span><br><span class="line">cd &#123;virtualenv_name&#125;</span><br><span class="line">Scripts\activate  # start virtual environment</span><br><span class="line">pip install django  # install Django package</span><br><span class="line">deactivate  # stop virtual environment</span><br></pre></td></tr></table></figure><br>＊ 在Mac環境下啟動虛擬環境的指令為source bin/activate<br>＊ 提示字元前面的(virtualenv_name)表示目前已啟動虛擬環境</p><h2 id="Start-New-Django-Project"><a href="#Start-New-Django-Project" class="headerlink" title="Start New Django Project"></a>Start New Django Project</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> start virtual environment first</span></span><br><span class="line">django-admin startproject &#123;project_name&#125;  # build new project</span><br></pre></td></tr></table></figure><h2 id="Run-Django-Server"><a href="#Run-Django-Server" class="headerlink" title="Run Django Server"></a>Run Django Server</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> start virtual environment first</span></span><br><span class="line">cd &#123;project_name&#125;</span><br><span class="line">python manage.py runserver</span><br></pre></td></tr></table></figure><p>＊ 在專案目錄下成功啟動測試Server後，在瀏覽器輸入127.0.0.1:8000，應該要看見以下畫面：<br><img src="https://i.imgur.com/9pdBamW.jpg" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;近期耗費大量心力在學習Django，因為Google搜尋到的教學文多數版本停留在Django 1.x，對初學者來說略過太多細節。
    
    </summary>
    
      <category term="Django" scheme="https://laplacetw.github.io/categories/Django/"/>
    
    
      <category term="python" scheme="https://laplacetw.github.io/tags/python/"/>
    
      <category term="django" scheme="https://laplacetw.github.io/tags/django/"/>
    
      <category term="web" scheme="https://laplacetw.github.io/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>兩個月後的魚缸</title>
    <link href="https://laplacetw.github.io/restart-planted-tank-2month/"/>
    <id>https://laplacetw.github.io/restart-planted-tank-2month/</id>
    <published>2018-09-16T17:03:12.000Z</published>
    <updated>2019-04-18T15:46:47.152Z</updated>
    
    <content type="html"><![CDATA[<p>近況更新。</p><ul><li>前景的牛毛氈因為長得過高更換為很趴又很會爬的新大珍珠草</li><li>綠宮廷一直縮頂…只好汰除…我還得多努力<a id="more"></a></li><li>後景增加了紅雨傘…但好景不常，其實是我不會照顧呵，變成綠雨傘了ＱＱ</li><li>藍綠藻解決後換黑毛藻…石頭全拿掉…開始投藥(TBS)，目前蝦子全掛ＱＱ</li><li>珊瑚莫斯沈木因黑毛藻而被檸檬酸處理後看起來了無生機，目前有恢復的跡象</li></ul><p>↓紅雨傘剛種植＋紅宮廷重新種植後的樣子(汗)<br><img src="https://i.imgur.com/po1wwVW.jpg" alt></p><p><img src="https://i.imgur.com/UL8a4xC.jpg" alt></p><p>我想，之後重新整理，可能會換成一呎的魚缸，然後底土一樣矽沙，但會嘗試鋪設基肥，大概會用洗衣袋裝著吧，免得造成日後矽沙要重複使用的麻煩。</p><p>再努力。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;近況更新。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;前景的牛毛氈因為長得過高更換為很趴又很會爬的新大珍珠草&lt;/li&gt;
&lt;li&gt;綠宮廷一直縮頂…只好汰除…我還得多努力
    
    </summary>
    
      <category term="Aquarium" scheme="https://laplacetw.github.io/categories/Aquarium/"/>
    
    
      <category term="aquarium" scheme="https://laplacetw.github.io/tags/aquarium/"/>
    
      <category term="planted tank" scheme="https://laplacetw.github.io/tags/planted-tank/"/>
    
  </entry>
  
  <entry>
    <title>正則式與re模組</title>
    <link href="https://laplacetw.github.io/data-sci-re/"/>
    <id>https://laplacetw.github.io/data-sci-re/</id>
    <published>2018-09-16T06:58:17.000Z</published>
    <updated>2019-08-21T08:37:49.604Z</updated>
    
    <content type="html"><![CDATA[<p>什麼是正則式(Regex)？常見的說法有正規表示式、正則表達式…等等，維基百科是如此描述的：使用單個字串來描述、符合某個句法規則的字串。在很多文字編輯器裡，正則運算式通常被用來檢索、替換那些符合某個模式的文字，總之就是「描述某種規則的表達式」。<br><a id="more"></a><br>舉例來說，email address其格式具有一定規則，假設要在一堆密密麻麻的html中尋找Gmail郵件地址，就必須使用正則式來描述過濾規則，讓程式能準確判斷出符合Gmail郵件地址格式的字串。<br><img src="https://i.imgur.com/lZufQJS.png" alt></p><h2 id="Pythex"><a href="#Pythex" class="headerlink" title="Pythex"></a>Pythex</h2><p>上述示範如何用正則式表達Gmail郵件地址規則的網站為<a href="https://pythex.org" target="_blank" rel="noopener">pythex.org</a>，可以用來驗證Regex正確與否，因為Regex的符號有點複雜，該頁面也相當貼心地放了速查表呢～只要按下regular expression cheatsheet按鈕即可查看。<br><img src="https://i.imgur.com/DIorI8v.png" alt></p><h2 id="re-module"><a href="#re-module" class="headerlink" title="re module"></a>re module</h2><p>在Python中使用正則式需要import re模組，常用的方法有search()、match()、findall()等，可參考<a href="https://docs.python.org/2/library/re.html" target="_blank" rel="noopener">官方文件</a>以取得更詳盡的說明。</p><p>那麼，search跟match有什麼不同呢？這是我一開始對這兩個方法的疑問，那就<a href="https://docs.python.org/2/library/re.html#search-vs-match" target="_blank" rel="noopener">看看官方文件怎麼說</a>，但實際編寫程式碼會幫助自己理解兩者間的差異。</p><p>根據官方文件的解釋：re.match() checks for a match only at the <span style="color:red;">beginning</span> of the string, while re.search() checks for a match <span style="color:red;">anywhere</span> in the string.</p><ul><li>match的搜尋方式為「從字串起始開始搜索，遇到不符合的字元便停止」</li><li>search的搜尋方式為「整個字串」</li></ul><p>個人覺得最常用到的應該是findall()，比對所有符合規則的字串並返回串列：<br><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">str_ =  <span class="string">'_.Aa123Bb456Cc789Dd3.14'</span></span><br><span class="line"></span><br><span class="line">find_alphabet = re.findall(<span class="string">r'[A-Za-z]+'</span>, str_)</span><br><span class="line">print(find_alphabet)  ＃ [<span class="string">'Aa'</span>, <span class="string">'Bb'</span>, <span class="string">'Cc'</span>, <span class="string">'Dd'</span>]</span><br><span class="line"></span><br><span class="line">find_rational = re.findall(<span class="string">r'[0-9]+\.?[0-9]*'</span>, str_)</span><br><span class="line">print(find_rational)  ＃ [<span class="string">'123'</span>, <span class="string">'456'</span>, <span class="string">'789'</span>, <span class="string">'3.14'</span>]</span><br></pre></td></tr></table></figure></p><h2 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h2><p>在Google首頁中尋找.jpg/.png，雖然只有一張圖片(笑)，另外，常用的Regex可以透過re.compile()轉換為Regex Object，以便於直接呼叫search()、match()、findall()，也可以在使用bs4模組解析網頁時使用:<br><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!usr/bin/env python3</span></span><br><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> requests <span class="keyword">as</span> rq</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup <span class="keyword">as</span> bs</span><br><span class="line"></span><br><span class="line">pattern = re.compile(<span class="string">r'.+\.jpg|.+\.png'</span>)</span><br><span class="line">url = <span class="string">'https://www.google.com'</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    res = rq.get(url)</span><br><span class="line">    res.raise_for_status()</span><br><span class="line"><span class="keyword">except</span> rq.HTTPError:</span><br><span class="line">    print(<span class="string">'HTTP Error!'</span>)</span><br><span class="line"></span><br><span class="line">soup = bs(res.text, <span class="string">'html.parser'</span>)</span><br><span class="line">imgs = soup.find_all(<span class="string">"meta"</span>, &#123;<span class="string">"content"</span>:pattern&#125;)  <span class="comment"># find all images in attr 'content' of tag 'meta'</span></span><br><span class="line"><span class="keyword">for</span> img <span class="keyword">in</span> imgs:</span><br><span class="line">    print(img[<span class="string">'content'</span>])  <span class="comment"># /images/branding/googleg/1x/googleg_standard_color_128dp.png</span></span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;什麼是正則式(Regex)？常見的說法有正規表示式、正則表達式…等等，維基百科是如此描述的：使用單個字串來描述、符合某個句法規則的字串。在很多文字編輯器裡，正則運算式通常被用來檢索、替換那些符合某個模式的文字，總之就是「描述某種規則的表達式」。&lt;br&gt;
    
    </summary>
    
      <category term="Data Science" scheme="https://laplacetw.github.io/categories/Data-Science/"/>
    
    
      <category term="python" scheme="https://laplacetw.github.io/tags/python/"/>
    
      <category term="regex" scheme="https://laplacetw.github.io/tags/regex/"/>
    
  </entry>
  
</feed>
